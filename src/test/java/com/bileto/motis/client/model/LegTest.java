/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bileto.motis.client.model;

import com.bileto.motis.client.model.Alert;
import com.bileto.motis.client.model.EncodedPolyline;
import com.bileto.motis.client.model.Mode;
import com.bileto.motis.client.model.Place;
import com.bileto.motis.client.model.Rental;
import com.bileto.motis.client.model.StepInstruction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Leg
 */
@Disabled
class LegTest {
    private final Leg model = new Leg();

    /**
     * Model tests for Leg
     */
    @Test
    void testLeg() {
        // TODO: test Leg
    }

    /**
     * Test the property 'mode'
     */
    @Test
    void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'from'
     */
    @Test
    void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'to'
     */
    @Test
    void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'duration'
     */
    @Test
    void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'scheduledStartTime'
     */
    @Test
    void scheduledStartTimeTest() {
        // TODO: test scheduledStartTime
    }

    /**
     * Test the property 'scheduledEndTime'
     */
    @Test
    void scheduledEndTimeTest() {
        // TODO: test scheduledEndTime
    }

    /**
     * Test the property 'realTime'
     */
    @Test
    void realTimeTest() {
        // TODO: test realTime
    }

    /**
     * Test the property 'scheduled'
     */
    @Test
    void scheduledTest() {
        // TODO: test scheduled
    }

    /**
     * Test the property 'distance'
     */
    @Test
    void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'interlineWithPreviousLeg'
     */
    @Test
    void interlineWithPreviousLegTest() {
        // TODO: test interlineWithPreviousLeg
    }

    /**
     * Test the property 'headsign'
     */
    @Test
    void headsignTest() {
        // TODO: test headsign
    }

    /**
     * Test the property 'routeColor'
     */
    @Test
    void routeColorTest() {
        // TODO: test routeColor
    }

    /**
     * Test the property 'routeTextColor'
     */
    @Test
    void routeTextColorTest() {
        // TODO: test routeTextColor
    }

    /**
     * Test the property 'routeType'
     */
    @Test
    void routeTypeTest() {
        // TODO: test routeType
    }

    /**
     * Test the property 'agencyName'
     */
    @Test
    void agencyNameTest() {
        // TODO: test agencyName
    }

    /**
     * Test the property 'agencyUrl'
     */
    @Test
    void agencyUrlTest() {
        // TODO: test agencyUrl
    }

    /**
     * Test the property 'agencyId'
     */
    @Test
    void agencyIdTest() {
        // TODO: test agencyId
    }

    /**
     * Test the property 'tripId'
     */
    @Test
    void tripIdTest() {
        // TODO: test tripId
    }

    /**
     * Test the property 'routeShortName'
     */
    @Test
    void routeShortNameTest() {
        // TODO: test routeShortName
    }

    /**
     * Test the property 'routeLongName'
     */
    @Test
    void routeLongNameTest() {
        // TODO: test routeLongName
    }

    /**
     * Test the property 'tripShortName'
     */
    @Test
    void tripShortNameTest() {
        // TODO: test tripShortName
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'cancelled'
     */
    @Test
    void cancelledTest() {
        // TODO: test cancelled
    }

    /**
     * Test the property 'source'
     */
    @Test
    void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'intermediateStops'
     */
    @Test
    void intermediateStopsTest() {
        // TODO: test intermediateStops
    }

    /**
     * Test the property 'legGeometry'
     */
    @Test
    void legGeometryTest() {
        // TODO: test legGeometry
    }

    /**
     * Test the property 'steps'
     */
    @Test
    void stepsTest() {
        // TODO: test steps
    }

    /**
     * Test the property 'rental'
     */
    @Test
    void rentalTest() {
        // TODO: test rental
    }

    /**
     * Test the property 'fareTransferIndex'
     */
    @Test
    void fareTransferIndexTest() {
        // TODO: test fareTransferIndex
    }

    /**
     * Test the property 'effectiveFareLegIndex'
     */
    @Test
    void effectiveFareLegIndexTest() {
        // TODO: test effectiveFareLegIndex
    }

    /**
     * Test the property 'alerts'
     */
    @Test
    void alertsTest() {
        // TODO: test alerts
    }

    /**
     * Test the property 'loopedCalendarSince'
     */
    @Test
    void loopedCalendarSinceTest() {
        // TODO: test loopedCalendarSince
    }

}
