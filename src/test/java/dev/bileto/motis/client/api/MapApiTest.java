/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.api;

import java.math.BigDecimal;
import dev.bileto.motis.client.model.Initial200Response;
import java.time.OffsetDateTime;
import dev.bileto.motis.client.model.Place;
import dev.bileto.motis.client.model.TripSegment;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for MapApi
 */
@Disabled
public class MapApiTest {

    private final MapApi api = new MapApi();

    
    /**
     * initial location to view the map at after loading based on where public transport should be visible
     *
     * 
     */
    @Test
    public void initialTest()  {
        // uncomment below to test the function
        //Initial200Response response = api.initial();

        // TODO: test validations
    }
    
    /**
     * Get all available levels for a map section
     *
     * 
     */
    @Test
    public void levelsTest()  {
        // uncomment below to test the function
        //String min = null;
        //String max = null;
        //List<BigDecimal> response = api.levels(min, max);

        // TODO: test validations
    }
    
    /**
     * Get all stops for a map section
     *
     * 
     */
    @Test
    public void stopsTest()  {
        // uncomment below to test the function
        //String min = null;
        //String max = null;
        //List<Place> response = api.stops(min, max);

        // TODO: test validations
    }
    
    /**
     * Given a area frame (box defined by top right and bottom left corner) and a time frame, it returns all trips and their respective shapes that operate in this area + time frame. Trips are filtered by zoom level. On low zoom levels, only long distance trains will be shown while on high zoom levels, also metros, buses and trams will be returned. 
     *
     * 
     */
    @Test
    public void tripsTest()  {
        // uncomment below to test the function
        //BigDecimal zoom = null;
        //String min = null;
        //String max = null;
        //OffsetDateTime startTime = null;
        //OffsetDateTime endTime = null;
        //List<TripSegment> response = api.trips(zoom, min, max, startTime, endTime);

        // TODO: test validations
    }
    
}
