/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.Mode;
import dev.bileto.motis.client.model.PickupDropoffType;
import dev.bileto.motis.client.model.Place;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * departure or arrival event at a stop
 */
@JsonPropertyOrder({
  StopTime.JSON_PROPERTY_PLACE,
  StopTime.JSON_PROPERTY_MODE,
  StopTime.JSON_PROPERTY_REAL_TIME,
  StopTime.JSON_PROPERTY_HEADSIGN,
  StopTime.JSON_PROPERTY_AGENCY_ID,
  StopTime.JSON_PROPERTY_AGENCY_NAME,
  StopTime.JSON_PROPERTY_AGENCY_URL,
  StopTime.JSON_PROPERTY_ROUTE_COLOR,
  StopTime.JSON_PROPERTY_ROUTE_TEXT_COLOR,
  StopTime.JSON_PROPERTY_TRIP_ID,
  StopTime.JSON_PROPERTY_ROUTE_TYPE,
  StopTime.JSON_PROPERTY_ROUTE_SHORT_NAME,
  StopTime.JSON_PROPERTY_ROUTE_LONG_NAME,
  StopTime.JSON_PROPERTY_TRIP_SHORT_NAME,
  StopTime.JSON_PROPERTY_DISPLAY_NAME,
  StopTime.JSON_PROPERTY_PICKUP_DROPOFF_TYPE,
  StopTime.JSON_PROPERTY_CANCELLED,
  StopTime.JSON_PROPERTY_TRIP_CANCELLED,
  StopTime.JSON_PROPERTY_SOURCE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class StopTime {
  public static final String JSON_PROPERTY_PLACE = "place";
  @jakarta.annotation.Nonnull
  private Place place;

  public static final String JSON_PROPERTY_MODE = "mode";
  @jakarta.annotation.Nonnull
  private Mode mode;

  public static final String JSON_PROPERTY_REAL_TIME = "realTime";
  @jakarta.annotation.Nonnull
  private Boolean realTime;

  public static final String JSON_PROPERTY_HEADSIGN = "headsign";
  @jakarta.annotation.Nonnull
  private String headsign;

  public static final String JSON_PROPERTY_AGENCY_ID = "agencyId";
  @jakarta.annotation.Nonnull
  private String agencyId;

  public static final String JSON_PROPERTY_AGENCY_NAME = "agencyName";
  @jakarta.annotation.Nonnull
  private String agencyName;

  public static final String JSON_PROPERTY_AGENCY_URL = "agencyUrl";
  @jakarta.annotation.Nonnull
  private String agencyUrl;

  public static final String JSON_PROPERTY_ROUTE_COLOR = "routeColor";
  @jakarta.annotation.Nullable
  private String routeColor;

  public static final String JSON_PROPERTY_ROUTE_TEXT_COLOR = "routeTextColor";
  @jakarta.annotation.Nullable
  private String routeTextColor;

  public static final String JSON_PROPERTY_TRIP_ID = "tripId";
  @jakarta.annotation.Nonnull
  private String tripId;

  public static final String JSON_PROPERTY_ROUTE_TYPE = "routeType";
  @jakarta.annotation.Nullable
  private Integer routeType;

  public static final String JSON_PROPERTY_ROUTE_SHORT_NAME = "routeShortName";
  @jakarta.annotation.Nonnull
  private String routeShortName;

  public static final String JSON_PROPERTY_ROUTE_LONG_NAME = "routeLongName";
  @jakarta.annotation.Nonnull
  private String routeLongName;

  public static final String JSON_PROPERTY_TRIP_SHORT_NAME = "tripShortName";
  @jakarta.annotation.Nonnull
  private String tripShortName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @jakarta.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_PICKUP_DROPOFF_TYPE = "pickupDropoffType";
  @jakarta.annotation.Nonnull
  private PickupDropoffType pickupDropoffType;

  public static final String JSON_PROPERTY_CANCELLED = "cancelled";
  @jakarta.annotation.Nonnull
  private Boolean cancelled;

  public static final String JSON_PROPERTY_TRIP_CANCELLED = "tripCancelled";
  @jakarta.annotation.Nonnull
  private Boolean tripCancelled;

  public static final String JSON_PROPERTY_SOURCE = "source";
  @jakarta.annotation.Nonnull
  private String source;

  public StopTime() {
  }

  public StopTime place(@jakarta.annotation.Nonnull Place place) {
    
    this.place = place;
    return this;
  }

  /**
   * information about the stop place and time
   * @return place
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Place getPlace() {
    return place;
  }


  @JsonProperty(JSON_PROPERTY_PLACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlace(@jakarta.annotation.Nonnull Place place) {
    this.place = place;
  }

  public StopTime mode(@jakarta.annotation.Nonnull Mode mode) {
    
    this.mode = mode;
    return this;
  }

  /**
   * Transport mode for this leg
   * @return mode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Mode getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMode(@jakarta.annotation.Nonnull Mode mode) {
    this.mode = mode;
  }

  public StopTime realTime(@jakarta.annotation.Nonnull Boolean realTime) {
    
    this.realTime = realTime;
    return this;
  }

  /**
   * Whether there is real-time data about this leg
   * @return realTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRealTime() {
    return realTime;
  }


  @JsonProperty(JSON_PROPERTY_REAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRealTime(@jakarta.annotation.Nonnull Boolean realTime) {
    this.realTime = realTime;
  }

  public StopTime headsign(@jakarta.annotation.Nonnull String headsign) {
    
    this.headsign = headsign;
    return this;
  }

  /**
   * For transit legs, the headsign of the bus or train being used. For non-transit legs, null 
   * @return headsign
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEADSIGN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHeadsign() {
    return headsign;
  }


  @JsonProperty(JSON_PROPERTY_HEADSIGN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeadsign(@jakarta.annotation.Nonnull String headsign) {
    this.headsign = headsign;
  }

  public StopTime agencyId(@jakarta.annotation.Nonnull String agencyId) {
    
    this.agencyId = agencyId;
    return this;
  }

  /**
   * Get agencyId
   * @return agencyId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENCY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAgencyId() {
    return agencyId;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgencyId(@jakarta.annotation.Nonnull String agencyId) {
    this.agencyId = agencyId;
  }

  public StopTime agencyName(@jakarta.annotation.Nonnull String agencyName) {
    
    this.agencyName = agencyName;
    return this;
  }

  /**
   * Get agencyName
   * @return agencyName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENCY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAgencyName() {
    return agencyName;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgencyName(@jakarta.annotation.Nonnull String agencyName) {
    this.agencyName = agencyName;
  }

  public StopTime agencyUrl(@jakarta.annotation.Nonnull String agencyUrl) {
    
    this.agencyUrl = agencyUrl;
    return this;
  }

  /**
   * Get agencyUrl
   * @return agencyUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AGENCY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAgencyUrl() {
    return agencyUrl;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAgencyUrl(@jakarta.annotation.Nonnull String agencyUrl) {
    this.agencyUrl = agencyUrl;
  }

  public StopTime routeColor(@jakarta.annotation.Nullable String routeColor) {
    
    this.routeColor = routeColor;
    return this;
  }

  /**
   * Get routeColor
   * @return routeColor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteColor() {
    return routeColor;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteColor(@jakarta.annotation.Nullable String routeColor) {
    this.routeColor = routeColor;
  }

  public StopTime routeTextColor(@jakarta.annotation.Nullable String routeTextColor) {
    
    this.routeTextColor = routeTextColor;
    return this;
  }

  /**
   * Get routeTextColor
   * @return routeTextColor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_TEXT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteTextColor() {
    return routeTextColor;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_TEXT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteTextColor(@jakarta.annotation.Nullable String routeTextColor) {
    this.routeTextColor = routeTextColor;
  }

  public StopTime tripId(@jakarta.annotation.Nonnull String tripId) {
    
    this.tripId = tripId;
    return this;
  }

  /**
   * Get tripId
   * @return tripId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRIP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTripId() {
    return tripId;
  }


  @JsonProperty(JSON_PROPERTY_TRIP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTripId(@jakarta.annotation.Nonnull String tripId) {
    this.tripId = tripId;
  }

  public StopTime routeType(@jakarta.annotation.Nullable Integer routeType) {
    
    this.routeType = routeType;
    return this;
  }

  /**
   * Get routeType
   * @return routeType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRouteType() {
    return routeType;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteType(@jakarta.annotation.Nullable Integer routeType) {
    this.routeType = routeType;
  }

  public StopTime routeShortName(@jakarta.annotation.Nonnull String routeShortName) {
    
    this.routeShortName = routeShortName;
    return this;
  }

  /**
   * Get routeShortName
   * @return routeShortName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROUTE_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRouteShortName() {
    return routeShortName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRouteShortName(@jakarta.annotation.Nonnull String routeShortName) {
    this.routeShortName = routeShortName;
  }

  public StopTime routeLongName(@jakarta.annotation.Nonnull String routeLongName) {
    
    this.routeLongName = routeLongName;
    return this;
  }

  /**
   * Get routeLongName
   * @return routeLongName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROUTE_LONG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRouteLongName() {
    return routeLongName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_LONG_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRouteLongName(@jakarta.annotation.Nonnull String routeLongName) {
    this.routeLongName = routeLongName;
  }

  public StopTime tripShortName(@jakarta.annotation.Nonnull String tripShortName) {
    
    this.tripShortName = tripShortName;
    return this;
  }

  /**
   * Get tripShortName
   * @return tripShortName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRIP_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTripShortName() {
    return tripShortName;
  }


  @JsonProperty(JSON_PROPERTY_TRIP_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTripShortName(@jakarta.annotation.Nonnull String tripShortName) {
    this.tripShortName = tripShortName;
  }

  public StopTime displayName(@jakarta.annotation.Nonnull String displayName) {
    
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@jakarta.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }

  public StopTime pickupDropoffType(@jakarta.annotation.Nonnull PickupDropoffType pickupDropoffType) {
    
    this.pickupDropoffType = pickupDropoffType;
    return this;
  }

  /**
   * Type of pickup (for departures) or dropoff (for arrivals), may be disallowed either due to schedule, skipped stops or cancellations
   * @return pickupDropoffType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PICKUP_DROPOFF_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PickupDropoffType getPickupDropoffType() {
    return pickupDropoffType;
  }


  @JsonProperty(JSON_PROPERTY_PICKUP_DROPOFF_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPickupDropoffType(@jakarta.annotation.Nonnull PickupDropoffType pickupDropoffType) {
    this.pickupDropoffType = pickupDropoffType;
  }

  public StopTime cancelled(@jakarta.annotation.Nonnull Boolean cancelled) {
    
    this.cancelled = cancelled;
    return this;
  }

  /**
   * Whether the departure/arrival is cancelled due to the realtime situation (either because the stop is skipped or because the entire trip is cancelled).
   * @return cancelled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCancelled() {
    return cancelled;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCancelled(@jakarta.annotation.Nonnull Boolean cancelled) {
    this.cancelled = cancelled;
  }

  public StopTime tripCancelled(@jakarta.annotation.Nonnull Boolean tripCancelled) {
    
    this.tripCancelled = tripCancelled;
    return this;
  }

  /**
   * Whether the entire trip is cancelled due to the realtime situation.
   * @return tripCancelled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRIP_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTripCancelled() {
    return tripCancelled;
  }


  @JsonProperty(JSON_PROPERTY_TRIP_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTripCancelled(@jakarta.annotation.Nonnull Boolean tripCancelled) {
    this.tripCancelled = tripCancelled;
  }

  public StopTime source(@jakarta.annotation.Nonnull String source) {
    
    this.source = source;
    return this;
  }

  /**
   * Filename and line number where this trip is from
   * @return source
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(@jakarta.annotation.Nonnull String source) {
    this.source = source;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopTime stopTime = (StopTime) o;
    return Objects.equals(this.place, stopTime.place) &&
        Objects.equals(this.mode, stopTime.mode) &&
        Objects.equals(this.realTime, stopTime.realTime) &&
        Objects.equals(this.headsign, stopTime.headsign) &&
        Objects.equals(this.agencyId, stopTime.agencyId) &&
        Objects.equals(this.agencyName, stopTime.agencyName) &&
        Objects.equals(this.agencyUrl, stopTime.agencyUrl) &&
        Objects.equals(this.routeColor, stopTime.routeColor) &&
        Objects.equals(this.routeTextColor, stopTime.routeTextColor) &&
        Objects.equals(this.tripId, stopTime.tripId) &&
        Objects.equals(this.routeType, stopTime.routeType) &&
        Objects.equals(this.routeShortName, stopTime.routeShortName) &&
        Objects.equals(this.routeLongName, stopTime.routeLongName) &&
        Objects.equals(this.tripShortName, stopTime.tripShortName) &&
        Objects.equals(this.displayName, stopTime.displayName) &&
        Objects.equals(this.pickupDropoffType, stopTime.pickupDropoffType) &&
        Objects.equals(this.cancelled, stopTime.cancelled) &&
        Objects.equals(this.tripCancelled, stopTime.tripCancelled) &&
        Objects.equals(this.source, stopTime.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(place, mode, realTime, headsign, agencyId, agencyName, agencyUrl, routeColor, routeTextColor, tripId, routeType, routeShortName, routeLongName, tripShortName, displayName, pickupDropoffType, cancelled, tripCancelled, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopTime {\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    realTime: ").append(toIndentedString(realTime)).append("\n");
    sb.append("    headsign: ").append(toIndentedString(headsign)).append("\n");
    sb.append("    agencyId: ").append(toIndentedString(agencyId)).append("\n");
    sb.append("    agencyName: ").append(toIndentedString(agencyName)).append("\n");
    sb.append("    agencyUrl: ").append(toIndentedString(agencyUrl)).append("\n");
    sb.append("    routeColor: ").append(toIndentedString(routeColor)).append("\n");
    sb.append("    routeTextColor: ").append(toIndentedString(routeTextColor)).append("\n");
    sb.append("    tripId: ").append(toIndentedString(tripId)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    routeShortName: ").append(toIndentedString(routeShortName)).append("\n");
    sb.append("    routeLongName: ").append(toIndentedString(routeLongName)).append("\n");
    sb.append("    tripShortName: ").append(toIndentedString(tripShortName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    pickupDropoffType: ").append(toIndentedString(pickupDropoffType)).append("\n");
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    tripCancelled: ").append(toIndentedString(tripCancelled)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

