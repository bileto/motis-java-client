/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.Alert;
import dev.bileto.motis.client.model.EncodedPolyline;
import dev.bileto.motis.client.model.Mode;
import dev.bileto.motis.client.model.Place;
import dev.bileto.motis.client.model.Rental;
import dev.bileto.motis.client.model.StepInstruction;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Leg
 */
@JsonPropertyOrder({
  Leg.JSON_PROPERTY_MODE,
  Leg.JSON_PROPERTY_FROM,
  Leg.JSON_PROPERTY_TO,
  Leg.JSON_PROPERTY_DURATION,
  Leg.JSON_PROPERTY_START_TIME,
  Leg.JSON_PROPERTY_END_TIME,
  Leg.JSON_PROPERTY_SCHEDULED_START_TIME,
  Leg.JSON_PROPERTY_SCHEDULED_END_TIME,
  Leg.JSON_PROPERTY_REAL_TIME,
  Leg.JSON_PROPERTY_SCHEDULED,
  Leg.JSON_PROPERTY_DISTANCE,
  Leg.JSON_PROPERTY_INTERLINE_WITH_PREVIOUS_LEG,
  Leg.JSON_PROPERTY_HEADSIGN,
  Leg.JSON_PROPERTY_ROUTE_COLOR,
  Leg.JSON_PROPERTY_ROUTE_TEXT_COLOR,
  Leg.JSON_PROPERTY_ROUTE_TYPE,
  Leg.JSON_PROPERTY_AGENCY_NAME,
  Leg.JSON_PROPERTY_AGENCY_URL,
  Leg.JSON_PROPERTY_AGENCY_ID,
  Leg.JSON_PROPERTY_TRIP_ID,
  Leg.JSON_PROPERTY_ROUTE_SHORT_NAME,
  Leg.JSON_PROPERTY_ROUTE_LONG_NAME,
  Leg.JSON_PROPERTY_TRIP_SHORT_NAME,
  Leg.JSON_PROPERTY_DISPLAY_NAME,
  Leg.JSON_PROPERTY_CANCELLED,
  Leg.JSON_PROPERTY_SOURCE,
  Leg.JSON_PROPERTY_INTERMEDIATE_STOPS,
  Leg.JSON_PROPERTY_LEG_GEOMETRY,
  Leg.JSON_PROPERTY_STEPS,
  Leg.JSON_PROPERTY_RENTAL,
  Leg.JSON_PROPERTY_FARE_TRANSFER_INDEX,
  Leg.JSON_PROPERTY_EFFECTIVE_FARE_LEG_INDEX,
  Leg.JSON_PROPERTY_ALERTS,
  Leg.JSON_PROPERTY_LOOPED_CALENDAR_SINCE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Leg {
  public static final String JSON_PROPERTY_MODE = "mode";
  @jakarta.annotation.Nonnull
  private Mode mode;

  public static final String JSON_PROPERTY_FROM = "from";
  @jakarta.annotation.Nonnull
  private Place from;

  public static final String JSON_PROPERTY_TO = "to";
  @jakarta.annotation.Nonnull
  private Place to;

  public static final String JSON_PROPERTY_DURATION = "duration";
  @jakarta.annotation.Nonnull
  private Integer duration;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_SCHEDULED_START_TIME = "scheduledStartTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime scheduledStartTime;

  public static final String JSON_PROPERTY_SCHEDULED_END_TIME = "scheduledEndTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime scheduledEndTime;

  public static final String JSON_PROPERTY_REAL_TIME = "realTime";
  @jakarta.annotation.Nonnull
  private Boolean realTime;

  public static final String JSON_PROPERTY_SCHEDULED = "scheduled";
  @jakarta.annotation.Nonnull
  private Boolean scheduled;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  @jakarta.annotation.Nullable
  private BigDecimal distance;

  public static final String JSON_PROPERTY_INTERLINE_WITH_PREVIOUS_LEG = "interlineWithPreviousLeg";
  @jakarta.annotation.Nullable
  private Boolean interlineWithPreviousLeg;

  public static final String JSON_PROPERTY_HEADSIGN = "headsign";
  @jakarta.annotation.Nullable
  private String headsign;

  public static final String JSON_PROPERTY_ROUTE_COLOR = "routeColor";
  @jakarta.annotation.Nullable
  private String routeColor;

  public static final String JSON_PROPERTY_ROUTE_TEXT_COLOR = "routeTextColor";
  @jakarta.annotation.Nullable
  private String routeTextColor;

  public static final String JSON_PROPERTY_ROUTE_TYPE = "routeType";
  @jakarta.annotation.Nullable
  private Integer routeType;

  public static final String JSON_PROPERTY_AGENCY_NAME = "agencyName";
  @jakarta.annotation.Nullable
  private String agencyName;

  public static final String JSON_PROPERTY_AGENCY_URL = "agencyUrl";
  @jakarta.annotation.Nullable
  private String agencyUrl;

  public static final String JSON_PROPERTY_AGENCY_ID = "agencyId";
  @jakarta.annotation.Nullable
  private String agencyId;

  public static final String JSON_PROPERTY_TRIP_ID = "tripId";
  @jakarta.annotation.Nullable
  private String tripId;

  public static final String JSON_PROPERTY_ROUTE_SHORT_NAME = "routeShortName";
  @jakarta.annotation.Nullable
  private String routeShortName;

  public static final String JSON_PROPERTY_ROUTE_LONG_NAME = "routeLongName";
  @jakarta.annotation.Nullable
  private String routeLongName;

  public static final String JSON_PROPERTY_TRIP_SHORT_NAME = "tripShortName";
  @jakarta.annotation.Nullable
  private String tripShortName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @jakarta.annotation.Nullable
  private String displayName;

  public static final String JSON_PROPERTY_CANCELLED = "cancelled";
  @jakarta.annotation.Nullable
  private Boolean cancelled;

  public static final String JSON_PROPERTY_SOURCE = "source";
  @jakarta.annotation.Nullable
  private String source;

  public static final String JSON_PROPERTY_INTERMEDIATE_STOPS = "intermediateStops";
  @jakarta.annotation.Nullable
  private List<Place> intermediateStops = new ArrayList<>();

  public static final String JSON_PROPERTY_LEG_GEOMETRY = "legGeometry";
  @jakarta.annotation.Nonnull
  private EncodedPolyline legGeometry;

  public static final String JSON_PROPERTY_STEPS = "steps";
  @jakarta.annotation.Nullable
  private List<StepInstruction> steps = new ArrayList<>();

  public static final String JSON_PROPERTY_RENTAL = "rental";
  @jakarta.annotation.Nullable
  private Rental rental;

  public static final String JSON_PROPERTY_FARE_TRANSFER_INDEX = "fareTransferIndex";
  @jakarta.annotation.Nullable
  private Integer fareTransferIndex;

  public static final String JSON_PROPERTY_EFFECTIVE_FARE_LEG_INDEX = "effectiveFareLegIndex";
  @jakarta.annotation.Nullable
  private Integer effectiveFareLegIndex;

  public static final String JSON_PROPERTY_ALERTS = "alerts";
  @jakarta.annotation.Nullable
  private List<Alert> alerts = new ArrayList<>();

  public static final String JSON_PROPERTY_LOOPED_CALENDAR_SINCE = "loopedCalendarSince";
  @jakarta.annotation.Nullable
  private OffsetDateTime loopedCalendarSince;

  public Leg() {
  }

  public Leg mode(@jakarta.annotation.Nonnull Mode mode) {
    
    this.mode = mode;
    return this;
  }

  /**
   * Transport mode for this leg
   * @return mode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Mode getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMode(@jakarta.annotation.Nonnull Mode mode) {
    this.mode = mode;
  }

  public Leg from(@jakarta.annotation.Nonnull Place from) {
    
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Place getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrom(@jakarta.annotation.Nonnull Place from) {
    this.from = from;
  }

  public Leg to(@jakarta.annotation.Nonnull Place to) {
    
    this.to = to;
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Place getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTo(@jakarta.annotation.Nonnull Place to) {
    this.to = to;
  }

  public Leg duration(@jakarta.annotation.Nonnull Integer duration) {
    
    this.duration = duration;
    return this;
  }

  /**
   * Leg duration in seconds  If leg is footpath:   The footpath duration is derived from the default footpath   duration using the query parameters &#x60;transferTimeFactor&#x60; and   &#x60;additionalTransferTime&#x60; as follows:   &#x60;leg.duration &#x3D; defaultDuration * transferTimeFactor + additionalTransferTime.&#x60;   In case the defaultDuration is needed, it can be calculated by   &#x60;defaultDuration &#x3D; (leg.duration - additionalTransferTime) / transferTimeFactor&#x60;.   Note that the default values are &#x60;transferTimeFactor &#x3D; 1&#x60; and   &#x60;additionalTransferTime &#x3D; 0&#x60; in case they are not explicitly   provided in the query. 
   * @return duration
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(@jakarta.annotation.Nonnull Integer duration) {
    this.duration = duration;
  }

  public Leg startTime(@jakarta.annotation.Nonnull OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

  /**
   * leg departure time
   * @return startTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartTime(@jakarta.annotation.Nonnull OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public Leg endTime(@jakarta.annotation.Nonnull OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

  /**
   * leg arrival time
   * @return endTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndTime(@jakarta.annotation.Nonnull OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public Leg scheduledStartTime(@jakarta.annotation.Nonnull OffsetDateTime scheduledStartTime) {
    
    this.scheduledStartTime = scheduledStartTime;
    return this;
  }

  /**
   * scheduled leg departure time
   * @return scheduledStartTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getScheduledStartTime() {
    return scheduledStartTime;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduledStartTime(@jakarta.annotation.Nonnull OffsetDateTime scheduledStartTime) {
    this.scheduledStartTime = scheduledStartTime;
  }

  public Leg scheduledEndTime(@jakarta.annotation.Nonnull OffsetDateTime scheduledEndTime) {
    
    this.scheduledEndTime = scheduledEndTime;
    return this;
  }

  /**
   * scheduled leg arrival time
   * @return scheduledEndTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULED_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getScheduledEndTime() {
    return scheduledEndTime;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduledEndTime(@jakarta.annotation.Nonnull OffsetDateTime scheduledEndTime) {
    this.scheduledEndTime = scheduledEndTime;
  }

  public Leg realTime(@jakarta.annotation.Nonnull Boolean realTime) {
    
    this.realTime = realTime;
    return this;
  }

  /**
   * Whether there is real-time data about this leg
   * @return realTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRealTime() {
    return realTime;
  }


  @JsonProperty(JSON_PROPERTY_REAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRealTime(@jakarta.annotation.Nonnull Boolean realTime) {
    this.realTime = realTime;
  }

  public Leg scheduled(@jakarta.annotation.Nonnull Boolean scheduled) {
    
    this.scheduled = scheduled;
    return this;
  }

  /**
   * Whether this leg was originally scheduled to run or is an additional service. Scheduled times will equal realtime times in this case. 
   * @return scheduled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCHEDULED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getScheduled() {
    return scheduled;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScheduled(@jakarta.annotation.Nonnull Boolean scheduled) {
    this.scheduled = scheduled;
  }

  public Leg distance(@jakarta.annotation.Nullable BigDecimal distance) {
    
    this.distance = distance;
    return this;
  }

  /**
   * For non-transit legs the distance traveled while traversing this leg in meters.
   * @return distance
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDistance() {
    return distance;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistance(@jakarta.annotation.Nullable BigDecimal distance) {
    this.distance = distance;
  }

  public Leg interlineWithPreviousLeg(@jakarta.annotation.Nullable Boolean interlineWithPreviousLeg) {
    
    this.interlineWithPreviousLeg = interlineWithPreviousLeg;
    return this;
  }

  /**
   * For transit legs, if the rider should stay on the vehicle as it changes route names.
   * @return interlineWithPreviousLeg
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERLINE_WITH_PREVIOUS_LEG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInterlineWithPreviousLeg() {
    return interlineWithPreviousLeg;
  }


  @JsonProperty(JSON_PROPERTY_INTERLINE_WITH_PREVIOUS_LEG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterlineWithPreviousLeg(@jakarta.annotation.Nullable Boolean interlineWithPreviousLeg) {
    this.interlineWithPreviousLeg = interlineWithPreviousLeg;
  }

  public Leg headsign(@jakarta.annotation.Nullable String headsign) {
    
    this.headsign = headsign;
    return this;
  }

  /**
   * For transit legs, the headsign of the bus or train being used. For non-transit legs, null 
   * @return headsign
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADSIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeadsign() {
    return headsign;
  }


  @JsonProperty(JSON_PROPERTY_HEADSIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeadsign(@jakarta.annotation.Nullable String headsign) {
    this.headsign = headsign;
  }

  public Leg routeColor(@jakarta.annotation.Nullable String routeColor) {
    
    this.routeColor = routeColor;
    return this;
  }

  /**
   * Get routeColor
   * @return routeColor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteColor() {
    return routeColor;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteColor(@jakarta.annotation.Nullable String routeColor) {
    this.routeColor = routeColor;
  }

  public Leg routeTextColor(@jakarta.annotation.Nullable String routeTextColor) {
    
    this.routeTextColor = routeTextColor;
    return this;
  }

  /**
   * Get routeTextColor
   * @return routeTextColor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_TEXT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteTextColor() {
    return routeTextColor;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_TEXT_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteTextColor(@jakarta.annotation.Nullable String routeTextColor) {
    this.routeTextColor = routeTextColor;
  }

  public Leg routeType(@jakarta.annotation.Nullable Integer routeType) {
    
    this.routeType = routeType;
    return this;
  }

  /**
   * Get routeType
   * @return routeType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRouteType() {
    return routeType;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteType(@jakarta.annotation.Nullable Integer routeType) {
    this.routeType = routeType;
  }

  public Leg agencyName(@jakarta.annotation.Nullable String agencyName) {
    
    this.agencyName = agencyName;
    return this;
  }

  /**
   * Get agencyName
   * @return agencyName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGENCY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAgencyName() {
    return agencyName;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgencyName(@jakarta.annotation.Nullable String agencyName) {
    this.agencyName = agencyName;
  }

  public Leg agencyUrl(@jakarta.annotation.Nullable String agencyUrl) {
    
    this.agencyUrl = agencyUrl;
    return this;
  }

  /**
   * Get agencyUrl
   * @return agencyUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGENCY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAgencyUrl() {
    return agencyUrl;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgencyUrl(@jakarta.annotation.Nullable String agencyUrl) {
    this.agencyUrl = agencyUrl;
  }

  public Leg agencyId(@jakarta.annotation.Nullable String agencyId) {
    
    this.agencyId = agencyId;
    return this;
  }

  /**
   * Get agencyId
   * @return agencyId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAgencyId() {
    return agencyId;
  }


  @JsonProperty(JSON_PROPERTY_AGENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgencyId(@jakarta.annotation.Nullable String agencyId) {
    this.agencyId = agencyId;
  }

  public Leg tripId(@jakarta.annotation.Nullable String tripId) {
    
    this.tripId = tripId;
    return this;
  }

  /**
   * Get tripId
   * @return tripId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTripId() {
    return tripId;
  }


  @JsonProperty(JSON_PROPERTY_TRIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTripId(@jakarta.annotation.Nullable String tripId) {
    this.tripId = tripId;
  }

  public Leg routeShortName(@jakarta.annotation.Nullable String routeShortName) {
    
    this.routeShortName = routeShortName;
    return this;
  }

  /**
   * Get routeShortName
   * @return routeShortName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteShortName() {
    return routeShortName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteShortName(@jakarta.annotation.Nullable String routeShortName) {
    this.routeShortName = routeShortName;
  }

  public Leg routeLongName(@jakarta.annotation.Nullable String routeLongName) {
    
    this.routeLongName = routeLongName;
    return this;
  }

  /**
   * Get routeLongName
   * @return routeLongName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTE_LONG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRouteLongName() {
    return routeLongName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_LONG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouteLongName(@jakarta.annotation.Nullable String routeLongName) {
    this.routeLongName = routeLongName;
  }

  public Leg tripShortName(@jakarta.annotation.Nullable String tripShortName) {
    
    this.tripShortName = tripShortName;
    return this;
  }

  /**
   * Get tripShortName
   * @return tripShortName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRIP_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTripShortName() {
    return tripShortName;
  }


  @JsonProperty(JSON_PROPERTY_TRIP_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTripShortName(@jakarta.annotation.Nullable String tripShortName) {
    this.tripShortName = tripShortName;
  }

  public Leg displayName(@jakarta.annotation.Nullable String displayName) {
    
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(@jakarta.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }

  public Leg cancelled(@jakarta.annotation.Nullable Boolean cancelled) {
    
    this.cancelled = cancelled;
    return this;
  }

  /**
   * Whether this trip is cancelled
   * @return cancelled
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCancelled() {
    return cancelled;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelled(@jakarta.annotation.Nullable Boolean cancelled) {
    this.cancelled = cancelled;
  }

  public Leg source(@jakarta.annotation.Nullable String source) {
    
    this.source = source;
    return this;
  }

  /**
   * Filename and line number where this trip is from
   * @return source
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(@jakarta.annotation.Nullable String source) {
    this.source = source;
  }

  public Leg intermediateStops(@jakarta.annotation.Nullable List<Place> intermediateStops) {
    
    this.intermediateStops = intermediateStops;
    return this;
  }

  public Leg addIntermediateStopsItem(Place intermediateStopsItem) {
    if (this.intermediateStops == null) {
      this.intermediateStops = new ArrayList<>();
    }
    this.intermediateStops.add(intermediateStopsItem);
    return this;
  }

  /**
   * For transit legs, intermediate stops between the Place where the leg originates and the Place where the leg ends. For non-transit legs, null. 
   * @return intermediateStops
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERMEDIATE_STOPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Place> getIntermediateStops() {
    return intermediateStops;
  }


  @JsonProperty(JSON_PROPERTY_INTERMEDIATE_STOPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIntermediateStops(@jakarta.annotation.Nullable List<Place> intermediateStops) {
    this.intermediateStops = intermediateStops;
  }

  public Leg legGeometry(@jakarta.annotation.Nonnull EncodedPolyline legGeometry) {
    
    this.legGeometry = legGeometry;
    return this;
  }

  /**
   * Get legGeometry
   * @return legGeometry
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEG_GEOMETRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EncodedPolyline getLegGeometry() {
    return legGeometry;
  }


  @JsonProperty(JSON_PROPERTY_LEG_GEOMETRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLegGeometry(@jakarta.annotation.Nonnull EncodedPolyline legGeometry) {
    this.legGeometry = legGeometry;
  }

  public Leg steps(@jakarta.annotation.Nullable List<StepInstruction> steps) {
    
    this.steps = steps;
    return this;
  }

  public Leg addStepsItem(StepInstruction stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

  /**
   * A series of turn by turn instructions used for walking, biking and driving. 
   * @return steps
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StepInstruction> getSteps() {
    return steps;
  }


  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSteps(@jakarta.annotation.Nullable List<StepInstruction> steps) {
    this.steps = steps;
  }

  public Leg rental(@jakarta.annotation.Nullable Rental rental) {
    
    this.rental = rental;
    return this;
  }

  /**
   * Get rental
   * @return rental
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RENTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Rental getRental() {
    return rental;
  }


  @JsonProperty(JSON_PROPERTY_RENTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRental(@jakarta.annotation.Nullable Rental rental) {
    this.rental = rental;
  }

  public Leg fareTransferIndex(@jakarta.annotation.Nullable Integer fareTransferIndex) {
    
    this.fareTransferIndex = fareTransferIndex;
    return this;
  }

  /**
   * Index into &#x60;Itinerary.fareTransfers&#x60; array to identify which fare transfer this leg belongs to 
   * @return fareTransferIndex
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FARE_TRANSFER_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFareTransferIndex() {
    return fareTransferIndex;
  }


  @JsonProperty(JSON_PROPERTY_FARE_TRANSFER_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFareTransferIndex(@jakarta.annotation.Nullable Integer fareTransferIndex) {
    this.fareTransferIndex = fareTransferIndex;
  }

  public Leg effectiveFareLegIndex(@jakarta.annotation.Nullable Integer effectiveFareLegIndex) {
    
    this.effectiveFareLegIndex = effectiveFareLegIndex;
    return this;
  }

  /**
   * Index into the &#x60;Itinerary.fareTransfers[fareTransferIndex].effectiveFareLegProducts&#x60; array to identify which effective fare leg this itinerary leg belongs to 
   * @return effectiveFareLegIndex
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_FARE_LEG_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEffectiveFareLegIndex() {
    return effectiveFareLegIndex;
  }


  @JsonProperty(JSON_PROPERTY_EFFECTIVE_FARE_LEG_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffectiveFareLegIndex(@jakarta.annotation.Nullable Integer effectiveFareLegIndex) {
    this.effectiveFareLegIndex = effectiveFareLegIndex;
  }

  public Leg alerts(@jakarta.annotation.Nullable List<Alert> alerts) {
    
    this.alerts = alerts;
    return this;
  }

  public Leg addAlertsItem(Alert alertsItem) {
    if (this.alerts == null) {
      this.alerts = new ArrayList<>();
    }
    this.alerts.add(alertsItem);
    return this;
  }

  /**
   * Alerts for this stop.
   * @return alerts
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Alert> getAlerts() {
    return alerts;
  }


  @JsonProperty(JSON_PROPERTY_ALERTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlerts(@jakarta.annotation.Nullable List<Alert> alerts) {
    this.alerts = alerts;
  }

  public Leg loopedCalendarSince(@jakarta.annotation.Nullable OffsetDateTime loopedCalendarSince) {
    
    this.loopedCalendarSince = loopedCalendarSince;
    return this;
  }

  /**
   * If set, this attribute indicates that this trip has been expanded beyond the feed end date (enabled by config flag &#x60;timetable.dataset.extend_calendar&#x60;) by looping active weekdays, e.g. from calendar.txt in GTFS. 
   * @return loopedCalendarSince
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOPED_CALENDAR_SINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLoopedCalendarSince() {
    return loopedCalendarSince;
  }


  @JsonProperty(JSON_PROPERTY_LOOPED_CALENDAR_SINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoopedCalendarSince(@jakarta.annotation.Nullable OffsetDateTime loopedCalendarSince) {
    this.loopedCalendarSince = loopedCalendarSince;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Leg leg = (Leg) o;
    return Objects.equals(this.mode, leg.mode) &&
        Objects.equals(this.from, leg.from) &&
        Objects.equals(this.to, leg.to) &&
        Objects.equals(this.duration, leg.duration) &&
        Objects.equals(this.startTime, leg.startTime) &&
        Objects.equals(this.endTime, leg.endTime) &&
        Objects.equals(this.scheduledStartTime, leg.scheduledStartTime) &&
        Objects.equals(this.scheduledEndTime, leg.scheduledEndTime) &&
        Objects.equals(this.realTime, leg.realTime) &&
        Objects.equals(this.scheduled, leg.scheduled) &&
        Objects.equals(this.distance, leg.distance) &&
        Objects.equals(this.interlineWithPreviousLeg, leg.interlineWithPreviousLeg) &&
        Objects.equals(this.headsign, leg.headsign) &&
        Objects.equals(this.routeColor, leg.routeColor) &&
        Objects.equals(this.routeTextColor, leg.routeTextColor) &&
        Objects.equals(this.routeType, leg.routeType) &&
        Objects.equals(this.agencyName, leg.agencyName) &&
        Objects.equals(this.agencyUrl, leg.agencyUrl) &&
        Objects.equals(this.agencyId, leg.agencyId) &&
        Objects.equals(this.tripId, leg.tripId) &&
        Objects.equals(this.routeShortName, leg.routeShortName) &&
        Objects.equals(this.routeLongName, leg.routeLongName) &&
        Objects.equals(this.tripShortName, leg.tripShortName) &&
        Objects.equals(this.displayName, leg.displayName) &&
        Objects.equals(this.cancelled, leg.cancelled) &&
        Objects.equals(this.source, leg.source) &&
        Objects.equals(this.intermediateStops, leg.intermediateStops) &&
        Objects.equals(this.legGeometry, leg.legGeometry) &&
        Objects.equals(this.steps, leg.steps) &&
        Objects.equals(this.rental, leg.rental) &&
        Objects.equals(this.fareTransferIndex, leg.fareTransferIndex) &&
        Objects.equals(this.effectiveFareLegIndex, leg.effectiveFareLegIndex) &&
        Objects.equals(this.alerts, leg.alerts) &&
        Objects.equals(this.loopedCalendarSince, leg.loopedCalendarSince);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, from, to, duration, startTime, endTime, scheduledStartTime, scheduledEndTime, realTime, scheduled, distance, interlineWithPreviousLeg, headsign, routeColor, routeTextColor, routeType, agencyName, agencyUrl, agencyId, tripId, routeShortName, routeLongName, tripShortName, displayName, cancelled, source, intermediateStops, legGeometry, steps, rental, fareTransferIndex, effectiveFareLegIndex, alerts, loopedCalendarSince);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Leg {\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    scheduledStartTime: ").append(toIndentedString(scheduledStartTime)).append("\n");
    sb.append("    scheduledEndTime: ").append(toIndentedString(scheduledEndTime)).append("\n");
    sb.append("    realTime: ").append(toIndentedString(realTime)).append("\n");
    sb.append("    scheduled: ").append(toIndentedString(scheduled)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    interlineWithPreviousLeg: ").append(toIndentedString(interlineWithPreviousLeg)).append("\n");
    sb.append("    headsign: ").append(toIndentedString(headsign)).append("\n");
    sb.append("    routeColor: ").append(toIndentedString(routeColor)).append("\n");
    sb.append("    routeTextColor: ").append(toIndentedString(routeTextColor)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    agencyName: ").append(toIndentedString(agencyName)).append("\n");
    sb.append("    agencyUrl: ").append(toIndentedString(agencyUrl)).append("\n");
    sb.append("    agencyId: ").append(toIndentedString(agencyId)).append("\n");
    sb.append("    tripId: ").append(toIndentedString(tripId)).append("\n");
    sb.append("    routeShortName: ").append(toIndentedString(routeShortName)).append("\n");
    sb.append("    routeLongName: ").append(toIndentedString(routeLongName)).append("\n");
    sb.append("    tripShortName: ").append(toIndentedString(tripShortName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    intermediateStops: ").append(toIndentedString(intermediateStops)).append("\n");
    sb.append("    legGeometry: ").append(toIndentedString(legGeometry)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    rental: ").append(toIndentedString(rental)).append("\n");
    sb.append("    fareTransferIndex: ").append(toIndentedString(fareTransferIndex)).append("\n");
    sb.append("    effectiveFareLegIndex: ").append(toIndentedString(effectiveFareLegIndex)).append("\n");
    sb.append("    alerts: ").append(toIndentedString(alerts)).append("\n");
    sb.append("    loopedCalendarSince: ").append(toIndentedString(loopedCalendarSince)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

