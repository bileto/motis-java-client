/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.RentalProvider;
import dev.bileto.motis.client.model.RentalStation;
import dev.bileto.motis.client.model.RentalVehicle;
import dev.bileto.motis.client.model.RentalZone;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Rentals200Response
 */
@JsonPropertyOrder({
  Rentals200Response.JSON_PROPERTY_PROVIDERS,
  Rentals200Response.JSON_PROPERTY_STATIONS,
  Rentals200Response.JSON_PROPERTY_VEHICLES,
  Rentals200Response.JSON_PROPERTY_ZONES
})
@JsonTypeName("rentals_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class Rentals200Response {
  public static final String JSON_PROPERTY_PROVIDERS = "providers";
  @jakarta.annotation.Nonnull
  private List<RentalProvider> providers = new ArrayList<>();

  public static final String JSON_PROPERTY_STATIONS = "stations";
  @jakarta.annotation.Nonnull
  private List<RentalStation> stations = new ArrayList<>();

  public static final String JSON_PROPERTY_VEHICLES = "vehicles";
  @jakarta.annotation.Nonnull
  private List<RentalVehicle> vehicles = new ArrayList<>();

  public static final String JSON_PROPERTY_ZONES = "zones";
  @jakarta.annotation.Nonnull
  private List<RentalZone> zones = new ArrayList<>();

  public Rentals200Response() {
  }

  public Rentals200Response providers(@jakarta.annotation.Nonnull List<RentalProvider> providers) {
    
    this.providers = providers;
    return this;
  }

  public Rentals200Response addProvidersItem(RentalProvider providersItem) {
    if (this.providers == null) {
      this.providers = new ArrayList<>();
    }
    this.providers.add(providersItem);
    return this;
  }

  /**
   * Get providers
   * @return providers
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_PROVIDERS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalProvider> getProviders() {
    return providers;
  }


  @JsonProperty(value = JSON_PROPERTY_PROVIDERS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProviders(@jakarta.annotation.Nonnull List<RentalProvider> providers) {
    this.providers = providers;
  }

  public Rentals200Response stations(@jakarta.annotation.Nonnull List<RentalStation> stations) {
    
    this.stations = stations;
    return this;
  }

  public Rentals200Response addStationsItem(RentalStation stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<>();
    }
    this.stations.add(stationsItem);
    return this;
  }

  /**
   * Get stations
   * @return stations
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_STATIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalStation> getStations() {
    return stations;
  }


  @JsonProperty(value = JSON_PROPERTY_STATIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStations(@jakarta.annotation.Nonnull List<RentalStation> stations) {
    this.stations = stations;
  }

  public Rentals200Response vehicles(@jakarta.annotation.Nonnull List<RentalVehicle> vehicles) {
    
    this.vehicles = vehicles;
    return this;
  }

  public Rentals200Response addVehiclesItem(RentalVehicle vehiclesItem) {
    if (this.vehicles == null) {
      this.vehicles = new ArrayList<>();
    }
    this.vehicles.add(vehiclesItem);
    return this;
  }

  /**
   * Get vehicles
   * @return vehicles
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_VEHICLES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalVehicle> getVehicles() {
    return vehicles;
  }


  @JsonProperty(value = JSON_PROPERTY_VEHICLES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicles(@jakarta.annotation.Nonnull List<RentalVehicle> vehicles) {
    this.vehicles = vehicles;
  }

  public Rentals200Response zones(@jakarta.annotation.Nonnull List<RentalZone> zones) {
    
    this.zones = zones;
    return this;
  }

  public Rentals200Response addZonesItem(RentalZone zonesItem) {
    if (this.zones == null) {
      this.zones = new ArrayList<>();
    }
    this.zones.add(zonesItem);
    return this;
  }

  /**
   * Get zones
   * @return zones
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ZONES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalZone> getZones() {
    return zones;
  }


  @JsonProperty(value = JSON_PROPERTY_ZONES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZones(@jakarta.annotation.Nonnull List<RentalZone> zones) {
    this.zones = zones;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rentals200Response rentals200Response = (Rentals200Response) o;
    return Objects.equals(this.providers, rentals200Response.providers) &&
        Objects.equals(this.stations, rentals200Response.stations) &&
        Objects.equals(this.vehicles, rentals200Response.vehicles) &&
        Objects.equals(this.zones, rentals200Response.zones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providers, stations, vehicles, zones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rentals200Response {\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

