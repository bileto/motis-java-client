/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.Direction;
import dev.bileto.motis.client.model.EncodedPolyline;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StepInstruction
 */
@JsonPropertyOrder({
  StepInstruction.JSON_PROPERTY_RELATIVE_DIRECTION,
  StepInstruction.JSON_PROPERTY_DISTANCE,
  StepInstruction.JSON_PROPERTY_FROM_LEVEL,
  StepInstruction.JSON_PROPERTY_TO_LEVEL,
  StepInstruction.JSON_PROPERTY_OSM_WAY,
  StepInstruction.JSON_PROPERTY_POLYLINE,
  StepInstruction.JSON_PROPERTY_STREET_NAME,
  StepInstruction.JSON_PROPERTY_EXIT,
  StepInstruction.JSON_PROPERTY_STAY_ON,
  StepInstruction.JSON_PROPERTY_AREA,
  StepInstruction.JSON_PROPERTY_TOLL,
  StepInstruction.JSON_PROPERTY_ACCESS_RESTRICTION,
  StepInstruction.JSON_PROPERTY_ELEVATION_UP,
  StepInstruction.JSON_PROPERTY_ELEVATION_DOWN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class StepInstruction {
  public static final String JSON_PROPERTY_RELATIVE_DIRECTION = "relativeDirection";
  @jakarta.annotation.Nonnull
  private Direction relativeDirection;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  @jakarta.annotation.Nonnull
  private BigDecimal distance;

  public static final String JSON_PROPERTY_FROM_LEVEL = "fromLevel";
  @jakarta.annotation.Nonnull
  private BigDecimal fromLevel;

  public static final String JSON_PROPERTY_TO_LEVEL = "toLevel";
  @jakarta.annotation.Nonnull
  private BigDecimal toLevel;

  public static final String JSON_PROPERTY_OSM_WAY = "osmWay";
  @jakarta.annotation.Nullable
  private Integer osmWay;

  public static final String JSON_PROPERTY_POLYLINE = "polyline";
  @jakarta.annotation.Nonnull
  private EncodedPolyline polyline;

  public static final String JSON_PROPERTY_STREET_NAME = "streetName";
  @jakarta.annotation.Nonnull
  private String streetName;

  public static final String JSON_PROPERTY_EXIT = "exit";
  @jakarta.annotation.Nonnull
  private String exit;

  public static final String JSON_PROPERTY_STAY_ON = "stayOn";
  @jakarta.annotation.Nonnull
  private Boolean stayOn;

  public static final String JSON_PROPERTY_AREA = "area";
  @jakarta.annotation.Nonnull
  private Boolean area;

  public static final String JSON_PROPERTY_TOLL = "toll";
  @jakarta.annotation.Nullable
  private Boolean toll;

  public static final String JSON_PROPERTY_ACCESS_RESTRICTION = "accessRestriction";
  @jakarta.annotation.Nullable
  private String accessRestriction;

  public static final String JSON_PROPERTY_ELEVATION_UP = "elevationUp";
  @jakarta.annotation.Nullable
  private Integer elevationUp;

  public static final String JSON_PROPERTY_ELEVATION_DOWN = "elevationDown";
  @jakarta.annotation.Nullable
  private Integer elevationDown;

  public StepInstruction() {
  }

  public StepInstruction relativeDirection(@jakarta.annotation.Nonnull Direction relativeDirection) {
    
    this.relativeDirection = relativeDirection;
    return this;
  }

  /**
   * Get relativeDirection
   * @return relativeDirection
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RELATIVE_DIRECTION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Direction getRelativeDirection() {
    return relativeDirection;
  }


  @JsonProperty(value = JSON_PROPERTY_RELATIVE_DIRECTION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRelativeDirection(@jakarta.annotation.Nonnull Direction relativeDirection) {
    this.relativeDirection = relativeDirection;
  }

  public StepInstruction distance(@jakarta.annotation.Nonnull BigDecimal distance) {
    
    this.distance = distance;
    return this;
  }

  /**
   * The distance in meters that this step takes.
   * @return distance
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DISTANCE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDistance() {
    return distance;
  }


  @JsonProperty(value = JSON_PROPERTY_DISTANCE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDistance(@jakarta.annotation.Nonnull BigDecimal distance) {
    this.distance = distance;
  }

  public StepInstruction fromLevel(@jakarta.annotation.Nonnull BigDecimal fromLevel) {
    
    this.fromLevel = fromLevel;
    return this;
  }

  /**
   * level where this segment starts, based on OpenStreetMap data
   * @return fromLevel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_FROM_LEVEL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getFromLevel() {
    return fromLevel;
  }


  @JsonProperty(value = JSON_PROPERTY_FROM_LEVEL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFromLevel(@jakarta.annotation.Nonnull BigDecimal fromLevel) {
    this.fromLevel = fromLevel;
  }

  public StepInstruction toLevel(@jakarta.annotation.Nonnull BigDecimal toLevel) {
    
    this.toLevel = toLevel;
    return this;
  }

  /**
   * level where this segment starts, based on OpenStreetMap data
   * @return toLevel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_TO_LEVEL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getToLevel() {
    return toLevel;
  }


  @JsonProperty(value = JSON_PROPERTY_TO_LEVEL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToLevel(@jakarta.annotation.Nonnull BigDecimal toLevel) {
    this.toLevel = toLevel;
  }

  public StepInstruction osmWay(@jakarta.annotation.Nullable Integer osmWay) {
    
    this.osmWay = osmWay;
    return this;
  }

  /**
   * OpenStreetMap way index
   * @return osmWay
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_OSM_WAY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOsmWay() {
    return osmWay;
  }


  @JsonProperty(value = JSON_PROPERTY_OSM_WAY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsmWay(@jakarta.annotation.Nullable Integer osmWay) {
    this.osmWay = osmWay;
  }

  public StepInstruction polyline(@jakarta.annotation.Nonnull EncodedPolyline polyline) {
    
    this.polyline = polyline;
    return this;
  }

  /**
   * Get polyline
   * @return polyline
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_POLYLINE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EncodedPolyline getPolyline() {
    return polyline;
  }


  @JsonProperty(value = JSON_PROPERTY_POLYLINE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPolyline(@jakarta.annotation.Nonnull EncodedPolyline polyline) {
    this.polyline = polyline;
  }

  public StepInstruction streetName(@jakarta.annotation.Nonnull String streetName) {
    
    this.streetName = streetName;
    return this;
  }

  /**
   * The name of the street.
   * @return streetName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_STREET_NAME, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStreetName() {
    return streetName;
  }


  @JsonProperty(value = JSON_PROPERTY_STREET_NAME, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreetName(@jakarta.annotation.Nonnull String streetName) {
    this.streetName = streetName;
  }

  public StepInstruction exit(@jakarta.annotation.Nonnull String exit) {
    
    this.exit = exit;
    return this;
  }

  /**
   * Not implemented! When exiting a highway or traffic circle, the exit name/number. 
   * @return exit
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_EXIT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExit() {
    return exit;
  }


  @JsonProperty(value = JSON_PROPERTY_EXIT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExit(@jakarta.annotation.Nonnull String exit) {
    this.exit = exit;
  }

  public StepInstruction stayOn(@jakarta.annotation.Nonnull Boolean stayOn) {
    
    this.stayOn = stayOn;
    return this;
  }

  /**
   * Not implemented! Indicates whether or not a street changes direction at an intersection. 
   * @return stayOn
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_STAY_ON, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getStayOn() {
    return stayOn;
  }


  @JsonProperty(value = JSON_PROPERTY_STAY_ON, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStayOn(@jakarta.annotation.Nonnull Boolean stayOn) {
    this.stayOn = stayOn;
  }

  public StepInstruction area(@jakarta.annotation.Nonnull Boolean area) {
    
    this.area = area;
    return this;
  }

  /**
   * Not implemented! This step is on an open area, such as a plaza or train platform, and thus the directions should say something like \&quot;cross\&quot; 
   * @return area
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_AREA, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getArea() {
    return area;
  }


  @JsonProperty(value = JSON_PROPERTY_AREA, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArea(@jakarta.annotation.Nonnull Boolean area) {
    this.area = area;
  }

  public StepInstruction toll(@jakarta.annotation.Nullable Boolean toll) {
    
    this.toll = toll;
    return this;
  }

  /**
   * Indicates that a fee must be paid by general traffic to use a road, road bridge or road tunnel.
   * @return toll
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TOLL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getToll() {
    return toll;
  }


  @JsonProperty(value = JSON_PROPERTY_TOLL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToll(@jakarta.annotation.Nullable Boolean toll) {
    this.toll = toll;
  }

  public StepInstruction accessRestriction(@jakarta.annotation.Nullable String accessRestriction) {
    
    this.accessRestriction = accessRestriction;
    return this;
  }

  /**
   * Experimental. Indicates whether access to this part of the route is restricted. See: https://wiki.openstreetmap.org/wiki/Conditional_restrictions 
   * @return accessRestriction
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ACCESS_RESTRICTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessRestriction() {
    return accessRestriction;
  }


  @JsonProperty(value = JSON_PROPERTY_ACCESS_RESTRICTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessRestriction(@jakarta.annotation.Nullable String accessRestriction) {
    this.accessRestriction = accessRestriction;
  }

  public StepInstruction elevationUp(@jakarta.annotation.Nullable Integer elevationUp) {
    
    this.elevationUp = elevationUp;
    return this;
  }

  /**
   * incline in meters across this path segment
   * @return elevationUp
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ELEVATION_UP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getElevationUp() {
    return elevationUp;
  }


  @JsonProperty(value = JSON_PROPERTY_ELEVATION_UP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElevationUp(@jakarta.annotation.Nullable Integer elevationUp) {
    this.elevationUp = elevationUp;
  }

  public StepInstruction elevationDown(@jakarta.annotation.Nullable Integer elevationDown) {
    
    this.elevationDown = elevationDown;
    return this;
  }

  /**
   * decline in meters across this path segment
   * @return elevationDown
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ELEVATION_DOWN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getElevationDown() {
    return elevationDown;
  }


  @JsonProperty(value = JSON_PROPERTY_ELEVATION_DOWN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElevationDown(@jakarta.annotation.Nullable Integer elevationDown) {
    this.elevationDown = elevationDown;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StepInstruction stepInstruction = (StepInstruction) o;
    return Objects.equals(this.relativeDirection, stepInstruction.relativeDirection) &&
        Objects.equals(this.distance, stepInstruction.distance) &&
        Objects.equals(this.fromLevel, stepInstruction.fromLevel) &&
        Objects.equals(this.toLevel, stepInstruction.toLevel) &&
        Objects.equals(this.osmWay, stepInstruction.osmWay) &&
        Objects.equals(this.polyline, stepInstruction.polyline) &&
        Objects.equals(this.streetName, stepInstruction.streetName) &&
        Objects.equals(this.exit, stepInstruction.exit) &&
        Objects.equals(this.stayOn, stepInstruction.stayOn) &&
        Objects.equals(this.area, stepInstruction.area) &&
        Objects.equals(this.toll, stepInstruction.toll) &&
        Objects.equals(this.accessRestriction, stepInstruction.accessRestriction) &&
        Objects.equals(this.elevationUp, stepInstruction.elevationUp) &&
        Objects.equals(this.elevationDown, stepInstruction.elevationDown);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relativeDirection, distance, fromLevel, toLevel, osmWay, polyline, streetName, exit, stayOn, area, toll, accessRestriction, elevationUp, elevationDown);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StepInstruction {\n");
    sb.append("    relativeDirection: ").append(toIndentedString(relativeDirection)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    fromLevel: ").append(toIndentedString(fromLevel)).append("\n");
    sb.append("    toLevel: ").append(toIndentedString(toLevel)).append("\n");
    sb.append("    osmWay: ").append(toIndentedString(osmWay)).append("\n");
    sb.append("    polyline: ").append(toIndentedString(polyline)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    exit: ").append(toIndentedString(exit)).append("\n");
    sb.append("    stayOn: ").append(toIndentedString(stayOn)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    toll: ").append(toIndentedString(toll)).append("\n");
    sb.append("    accessRestriction: ").append(toIndentedString(accessRestriction)).append("\n");
    sb.append("    elevationUp: ").append(toIndentedString(elevationUp)).append("\n");
    sb.append("    elevationDown: ").append(toIndentedString(elevationDown)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

