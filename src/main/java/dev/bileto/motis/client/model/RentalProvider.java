/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.RentalFormFactor;
import dev.bileto.motis.client.model.RentalVehicleType;
import dev.bileto.motis.client.model.RentalZoneRestrictions;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RentalProvider
 */
@JsonPropertyOrder({
  RentalProvider.JSON_PROPERTY_ID,
  RentalProvider.JSON_PROPERTY_NAME,
  RentalProvider.JSON_PROPERTY_OPERATOR,
  RentalProvider.JSON_PROPERTY_URL,
  RentalProvider.JSON_PROPERTY_PURCHASE_URL,
  RentalProvider.JSON_PROPERTY_BBOX,
  RentalProvider.JSON_PROPERTY_VEHICLE_TYPES,
  RentalProvider.JSON_PROPERTY_FORM_FACTORS,
  RentalProvider.JSON_PROPERTY_DEFAULT_RESTRICTIONS,
  RentalProvider.JSON_PROPERTY_GLOBAL_GEOFENCING_RULES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class RentalProvider {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  @jakarta.annotation.Nullable
  private String operator;

  public static final String JSON_PROPERTY_URL = "url";
  @jakarta.annotation.Nullable
  private String url;

  public static final String JSON_PROPERTY_PURCHASE_URL = "purchaseUrl";
  @jakarta.annotation.Nullable
  private String purchaseUrl;

  public static final String JSON_PROPERTY_BBOX = "bbox";
  @jakarta.annotation.Nonnull
  private List<BigDecimal> bbox = new ArrayList<>();

  public static final String JSON_PROPERTY_VEHICLE_TYPES = "vehicleTypes";
  @jakarta.annotation.Nonnull
  private List<RentalVehicleType> vehicleTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_FORM_FACTORS = "formFactors";
  @jakarta.annotation.Nonnull
  private List<RentalFormFactor> formFactors = new ArrayList<>();

  public static final String JSON_PROPERTY_DEFAULT_RESTRICTIONS = "defaultRestrictions";
  @jakarta.annotation.Nonnull
  private RentalZoneRestrictions defaultRestrictions;

  public static final String JSON_PROPERTY_GLOBAL_GEOFENCING_RULES = "globalGeofencingRules";
  @jakarta.annotation.Nonnull
  private List<RentalZoneRestrictions> globalGeofencingRules = new ArrayList<>();

  public RentalProvider() {
  }

  public RentalProvider id(@jakarta.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the rental provider
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }

  public RentalProvider name(@jakarta.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name of the provider to be displayed to customers
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_NAME, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(value = JSON_PROPERTY_NAME, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public RentalProvider operator(@jakarta.annotation.Nullable String operator) {
    
    this.operator = operator;
    return this;
  }

  /**
   * Name of the system operator
   * @return operator
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_OPERATOR, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperator() {
    return operator;
  }


  @JsonProperty(value = JSON_PROPERTY_OPERATOR, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperator(@jakarta.annotation.Nullable String operator) {
    this.operator = operator;
  }

  public RentalProvider url(@jakarta.annotation.Nullable String url) {
    
    this.url = url;
    return this;
  }

  /**
   * URL of the vehicle share system
   * @return url
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(value = JSON_PROPERTY_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@jakarta.annotation.Nullable String url) {
    this.url = url;
  }

  public RentalProvider purchaseUrl(@jakarta.annotation.Nullable String purchaseUrl) {
    
    this.purchaseUrl = purchaseUrl;
    return this;
  }

  /**
   * URL where a customer can purchase a membership
   * @return purchaseUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PURCHASE_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurchaseUrl() {
    return purchaseUrl;
  }


  @JsonProperty(value = JSON_PROPERTY_PURCHASE_URL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseUrl(@jakarta.annotation.Nullable String purchaseUrl) {
    this.purchaseUrl = purchaseUrl;
  }

  public RentalProvider bbox(@jakarta.annotation.Nonnull List<BigDecimal> bbox) {
    
    this.bbox = bbox;
    return this;
  }

  public RentalProvider addBboxItem(BigDecimal bboxItem) {
    if (this.bbox == null) {
      this.bbox = new ArrayList<>();
    }
    this.bbox.add(bboxItem);
    return this;
  }

  /**
   * Bounding box of the area covered by this rental provider, [west, south, east, north] as [lon, lat, lon, lat] 
   * @return bbox
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_BBOX, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BigDecimal> getBbox() {
    return bbox;
  }


  @JsonProperty(value = JSON_PROPERTY_BBOX, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBbox(@jakarta.annotation.Nonnull List<BigDecimal> bbox) {
    this.bbox = bbox;
  }

  public RentalProvider vehicleTypes(@jakarta.annotation.Nonnull List<RentalVehicleType> vehicleTypes) {
    
    this.vehicleTypes = vehicleTypes;
    return this;
  }

  public RentalProvider addVehicleTypesItem(RentalVehicleType vehicleTypesItem) {
    if (this.vehicleTypes == null) {
      this.vehicleTypes = new ArrayList<>();
    }
    this.vehicleTypes.add(vehicleTypesItem);
    return this;
  }

  /**
   * Get vehicleTypes
   * @return vehicleTypes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_VEHICLE_TYPES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalVehicleType> getVehicleTypes() {
    return vehicleTypes;
  }


  @JsonProperty(value = JSON_PROPERTY_VEHICLE_TYPES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicleTypes(@jakarta.annotation.Nonnull List<RentalVehicleType> vehicleTypes) {
    this.vehicleTypes = vehicleTypes;
  }

  public RentalProvider formFactors(@jakarta.annotation.Nonnull List<RentalFormFactor> formFactors) {
    
    this.formFactors = formFactors;
    return this;
  }

  public RentalProvider addFormFactorsItem(RentalFormFactor formFactorsItem) {
    if (this.formFactors == null) {
      this.formFactors = new ArrayList<>();
    }
    this.formFactors.add(formFactorsItem);
    return this;
  }

  /**
   * List of form factors offered by this provider
   * @return formFactors
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_FORM_FACTORS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalFormFactor> getFormFactors() {
    return formFactors;
  }


  @JsonProperty(value = JSON_PROPERTY_FORM_FACTORS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormFactors(@jakarta.annotation.Nonnull List<RentalFormFactor> formFactors) {
    this.formFactors = formFactors;
  }

  public RentalProvider defaultRestrictions(@jakarta.annotation.Nonnull RentalZoneRestrictions defaultRestrictions) {
    
    this.defaultRestrictions = defaultRestrictions;
    return this;
  }

  /**
   * Get defaultRestrictions
   * @return defaultRestrictions
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DEFAULT_RESTRICTIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RentalZoneRestrictions getDefaultRestrictions() {
    return defaultRestrictions;
  }


  @JsonProperty(value = JSON_PROPERTY_DEFAULT_RESTRICTIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultRestrictions(@jakarta.annotation.Nonnull RentalZoneRestrictions defaultRestrictions) {
    this.defaultRestrictions = defaultRestrictions;
  }

  public RentalProvider globalGeofencingRules(@jakarta.annotation.Nonnull List<RentalZoneRestrictions> globalGeofencingRules) {
    
    this.globalGeofencingRules = globalGeofencingRules;
    return this;
  }

  public RentalProvider addGlobalGeofencingRulesItem(RentalZoneRestrictions globalGeofencingRulesItem) {
    if (this.globalGeofencingRules == null) {
      this.globalGeofencingRules = new ArrayList<>();
    }
    this.globalGeofencingRules.add(globalGeofencingRulesItem);
    return this;
  }

  /**
   * Get globalGeofencingRules
   * @return globalGeofencingRules
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_GLOBAL_GEOFENCING_RULES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalZoneRestrictions> getGlobalGeofencingRules() {
    return globalGeofencingRules;
  }


  @JsonProperty(value = JSON_PROPERTY_GLOBAL_GEOFENCING_RULES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalGeofencingRules(@jakarta.annotation.Nonnull List<RentalZoneRestrictions> globalGeofencingRules) {
    this.globalGeofencingRules = globalGeofencingRules;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RentalProvider rentalProvider = (RentalProvider) o;
    return Objects.equals(this.id, rentalProvider.id) &&
        Objects.equals(this.name, rentalProvider.name) &&
        Objects.equals(this.operator, rentalProvider.operator) &&
        Objects.equals(this.url, rentalProvider.url) &&
        Objects.equals(this.purchaseUrl, rentalProvider.purchaseUrl) &&
        Objects.equals(this.bbox, rentalProvider.bbox) &&
        Objects.equals(this.vehicleTypes, rentalProvider.vehicleTypes) &&
        Objects.equals(this.formFactors, rentalProvider.formFactors) &&
        Objects.equals(this.defaultRestrictions, rentalProvider.defaultRestrictions) &&
        Objects.equals(this.globalGeofencingRules, rentalProvider.globalGeofencingRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, operator, url, purchaseUrl, bbox, vehicleTypes, formFactors, defaultRestrictions, globalGeofencingRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RentalProvider {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    purchaseUrl: ").append(toIndentedString(purchaseUrl)).append("\n");
    sb.append("    bbox: ").append(toIndentedString(bbox)).append("\n");
    sb.append("    vehicleTypes: ").append(toIndentedString(vehicleTypes)).append("\n");
    sb.append("    formFactors: ").append(toIndentedString(formFactors)).append("\n");
    sb.append("    defaultRestrictions: ").append(toIndentedString(defaultRestrictions)).append("\n");
    sb.append("    globalGeofencingRules: ").append(toIndentedString(globalGeofencingRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

