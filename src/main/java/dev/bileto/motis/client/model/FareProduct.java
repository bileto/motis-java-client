/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.FareMedia;
import dev.bileto.motis.client.model.RiderCategory;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FareProduct
 */
@JsonPropertyOrder({
  FareProduct.JSON_PROPERTY_NAME,
  FareProduct.JSON_PROPERTY_AMOUNT,
  FareProduct.JSON_PROPERTY_CURRENCY,
  FareProduct.JSON_PROPERTY_RIDER_CATEGORY,
  FareProduct.JSON_PROPERTY_MEDIA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class FareProduct {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @jakarta.annotation.Nonnull
  private BigDecimal amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @jakarta.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_RIDER_CATEGORY = "riderCategory";
  @jakarta.annotation.Nullable
  private RiderCategory riderCategory;

  public static final String JSON_PROPERTY_MEDIA = "media";
  @jakarta.annotation.Nullable
  private FareMedia media;

  public FareProduct() {
  }

  public FareProduct name(@jakarta.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * The name of the fare product as displayed to riders.
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public FareProduct amount(@jakarta.annotation.Nonnull BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The cost of the fare product. May be negative to represent transfer discounts. May be zero to represent a fare product that is free.
   * @return amount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@jakarta.annotation.Nonnull BigDecimal amount) {
    this.amount = amount;
  }

  public FareProduct currency(@jakarta.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * ISO 4217 currency code. The currency of the cost of the fare product.
   * @return currency
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@jakarta.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public FareProduct riderCategory(@jakarta.annotation.Nullable RiderCategory riderCategory) {
    
    this.riderCategory = riderCategory;
    return this;
  }

  /**
   * Get riderCategory
   * @return riderCategory
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIDER_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RiderCategory getRiderCategory() {
    return riderCategory;
  }


  @JsonProperty(JSON_PROPERTY_RIDER_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiderCategory(@jakarta.annotation.Nullable RiderCategory riderCategory) {
    this.riderCategory = riderCategory;
  }

  public FareProduct media(@jakarta.annotation.Nullable FareMedia media) {
    
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FareMedia getMedia() {
    return media;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedia(@jakarta.annotation.Nullable FareMedia media) {
    this.media = media;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FareProduct fareProduct = (FareProduct) o;
    return Objects.equals(this.name, fareProduct.name) &&
        Objects.equals(this.amount, fareProduct.amount) &&
        Objects.equals(this.currency, fareProduct.currency) &&
        Objects.equals(this.riderCategory, fareProduct.riderCategory) &&
        Objects.equals(this.media, fareProduct.media);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, amount, currency, riderCategory, media);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FareProduct {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    riderCategory: ").append(toIndentedString(riderCategory)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

