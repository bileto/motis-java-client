/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.EncodedPolyline;
import dev.bileto.motis.client.model.RentalZoneRestrictions;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RentalZone
 */
@JsonPropertyOrder({
  RentalZone.JSON_PROPERTY_PROVIDER_ID,
  RentalZone.JSON_PROPERTY_NAME,
  RentalZone.JSON_PROPERTY_Z,
  RentalZone.JSON_PROPERTY_AREA,
  RentalZone.JSON_PROPERTY_RULES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class RentalZone {
  public static final String JSON_PROPERTY_PROVIDER_ID = "providerId";
  @jakarta.annotation.Nonnull
  private String providerId;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_Z = "z";
  @jakarta.annotation.Nonnull
  private Integer z;

  public static final String JSON_PROPERTY_AREA = "area";
  @jakarta.annotation.Nonnull
  private List<List<EncodedPolyline>> area = new ArrayList<>();

  public static final String JSON_PROPERTY_RULES = "rules";
  @jakarta.annotation.Nonnull
  private List<RentalZoneRestrictions> rules = new ArrayList<>();

  public RentalZone() {
  }

  public RentalZone providerId(@jakarta.annotation.Nonnull String providerId) {
    
    this.providerId = providerId;
    return this;
  }

  /**
   * Unique identifier of the rental provider
   * @return providerId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_PROVIDER_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProviderId() {
    return providerId;
  }


  @JsonProperty(value = JSON_PROPERTY_PROVIDER_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProviderId(@jakarta.annotation.Nonnull String providerId) {
    this.providerId = providerId;
  }

  public RentalZone name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Public name of the geofencing zone
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }

  public RentalZone z(@jakarta.annotation.Nonnull Integer z) {
    
    this.z = z;
    return this;
  }

  /**
   * Zone precedence / z-index (higher number &#x3D; higher precedence)
   * @return z
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_Z, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getZ() {
    return z;
  }


  @JsonProperty(value = JSON_PROPERTY_Z, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZ(@jakarta.annotation.Nonnull Integer z) {
    this.z = z;
  }

  public RentalZone area(@jakarta.annotation.Nonnull List<List<EncodedPolyline>> area) {
    
    this.area = area;
    return this;
  }

  public RentalZone addAreaItem(List<EncodedPolyline> areaItem) {
    if (this.area == null) {
      this.area = new ArrayList<>();
    }
    this.area.add(areaItem);
    return this;
  }

  /**
   * A multi-polygon contains a number of polygons, each containing a number of rings, which are encoded as polylines (with precision 6).  For each polygon, the first ring is the outer ring, all subsequent rings are inner rings (holes). 
   * @return area
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_AREA, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<EncodedPolyline>> getArea() {
    return area;
  }


  @JsonProperty(value = JSON_PROPERTY_AREA, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArea(@jakarta.annotation.Nonnull List<List<EncodedPolyline>> area) {
    this.area = area;
  }

  public RentalZone rules(@jakarta.annotation.Nonnull List<RentalZoneRestrictions> rules) {
    
    this.rules = rules;
    return this;
  }

  public RentalZone addRulesItem(RentalZoneRestrictions rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * Get rules
   * @return rules
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RULES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RentalZoneRestrictions> getRules() {
    return rules;
  }


  @JsonProperty(value = JSON_PROPERTY_RULES, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRules(@jakarta.annotation.Nonnull List<RentalZoneRestrictions> rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RentalZone rentalZone = (RentalZone) o;
    return Objects.equals(this.providerId, rentalZone.providerId) &&
        Objects.equals(this.name, rentalZone.name) &&
        Objects.equals(this.z, rentalZone.z) &&
        Objects.equals(this.area, rentalZone.area) &&
        Objects.equals(this.rules, rentalZone.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providerId, name, z, area, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RentalZone {\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    z: ").append(toIndentedString(z)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

