/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.RentalFormFactor;
import dev.bileto.motis.client.model.RentalPropulsionType;
import dev.bileto.motis.client.model.RentalReturnConstraint;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RentalVehicleType
 */
@JsonPropertyOrder({
  RentalVehicleType.JSON_PROPERTY_ID,
  RentalVehicleType.JSON_PROPERTY_FORM_FACTOR,
  RentalVehicleType.JSON_PROPERTY_PROPULSION_TYPE,
  RentalVehicleType.JSON_PROPERTY_RETURN_CONSTRAINT,
  RentalVehicleType.JSON_PROPERTY_RETURN_CONSTRAINT_GUESSED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class RentalVehicleType {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_FORM_FACTOR = "formFactor";
  @jakarta.annotation.Nonnull
  private RentalFormFactor formFactor;

  public static final String JSON_PROPERTY_PROPULSION_TYPE = "propulsionType";
  @jakarta.annotation.Nonnull
  private RentalPropulsionType propulsionType;

  public static final String JSON_PROPERTY_RETURN_CONSTRAINT = "returnConstraint";
  @jakarta.annotation.Nonnull
  private RentalReturnConstraint returnConstraint;

  public static final String JSON_PROPERTY_RETURN_CONSTRAINT_GUESSED = "returnConstraintGuessed";
  @jakarta.annotation.Nonnull
  private Boolean returnConstraintGuessed;

  public RentalVehicleType() {
  }

  public RentalVehicleType id(@jakarta.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the vehicle type (unique within the provider)
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }

  public RentalVehicleType formFactor(@jakarta.annotation.Nonnull RentalFormFactor formFactor) {
    
    this.formFactor = formFactor;
    return this;
  }

  /**
   * Get formFactor
   * @return formFactor
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_FORM_FACTOR, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RentalFormFactor getFormFactor() {
    return formFactor;
  }


  @JsonProperty(value = JSON_PROPERTY_FORM_FACTOR, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormFactor(@jakarta.annotation.Nonnull RentalFormFactor formFactor) {
    this.formFactor = formFactor;
  }

  public RentalVehicleType propulsionType(@jakarta.annotation.Nonnull RentalPropulsionType propulsionType) {
    
    this.propulsionType = propulsionType;
    return this;
  }

  /**
   * Get propulsionType
   * @return propulsionType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_PROPULSION_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RentalPropulsionType getPropulsionType() {
    return propulsionType;
  }


  @JsonProperty(value = JSON_PROPERTY_PROPULSION_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPropulsionType(@jakarta.annotation.Nonnull RentalPropulsionType propulsionType) {
    this.propulsionType = propulsionType;
  }

  public RentalVehicleType returnConstraint(@jakarta.annotation.Nonnull RentalReturnConstraint returnConstraint) {
    
    this.returnConstraint = returnConstraint;
    return this;
  }

  /**
   * Get returnConstraint
   * @return returnConstraint
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RETURN_CONSTRAINT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RentalReturnConstraint getReturnConstraint() {
    return returnConstraint;
  }


  @JsonProperty(value = JSON_PROPERTY_RETURN_CONSTRAINT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReturnConstraint(@jakarta.annotation.Nonnull RentalReturnConstraint returnConstraint) {
    this.returnConstraint = returnConstraint;
  }

  public RentalVehicleType returnConstraintGuessed(@jakarta.annotation.Nonnull Boolean returnConstraintGuessed) {
    
    this.returnConstraintGuessed = returnConstraintGuessed;
    return this;
  }

  /**
   * Whether the return constraint was guessed instead of being specified by the rental provider
   * @return returnConstraintGuessed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RETURN_CONSTRAINT_GUESSED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getReturnConstraintGuessed() {
    return returnConstraintGuessed;
  }


  @JsonProperty(value = JSON_PROPERTY_RETURN_CONSTRAINT_GUESSED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReturnConstraintGuessed(@jakarta.annotation.Nonnull Boolean returnConstraintGuessed) {
    this.returnConstraintGuessed = returnConstraintGuessed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RentalVehicleType rentalVehicleType = (RentalVehicleType) o;
    return Objects.equals(this.id, rentalVehicleType.id) &&
        Objects.equals(this.formFactor, rentalVehicleType.formFactor) &&
        Objects.equals(this.propulsionType, rentalVehicleType.propulsionType) &&
        Objects.equals(this.returnConstraint, rentalVehicleType.returnConstraint) &&
        Objects.equals(this.returnConstraintGuessed, rentalVehicleType.returnConstraintGuessed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, formFactor, propulsionType, returnConstraint, returnConstraintGuessed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RentalVehicleType {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    formFactor: ").append(toIndentedString(formFactor)).append("\n");
    sb.append("    propulsionType: ").append(toIndentedString(propulsionType)).append("\n");
    sb.append("    returnConstraint: ").append(toIndentedString(returnConstraint)).append("\n");
    sb.append("    returnConstraintGuessed: ").append(toIndentedString(returnConstraintGuessed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

