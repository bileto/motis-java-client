/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * EncodedPolyline
 */
@JsonPropertyOrder({
  EncodedPolyline.JSON_PROPERTY_POINTS,
  EncodedPolyline.JSON_PROPERTY_PRECISION,
  EncodedPolyline.JSON_PROPERTY_LENGTH
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class EncodedPolyline {
  public static final String JSON_PROPERTY_POINTS = "points";
  @jakarta.annotation.Nonnull
  private String points;

  public static final String JSON_PROPERTY_PRECISION = "precision";
  @jakarta.annotation.Nonnull
  private Integer precision;

  public static final String JSON_PROPERTY_LENGTH = "length";
  @jakarta.annotation.Nonnull
  private Integer length;

  public EncodedPolyline() {
  }

  public EncodedPolyline points(@jakarta.annotation.Nonnull String points) {
    
    this.points = points;
    return this;
  }

  /**
   * The encoded points of the polyline using the Google polyline encoding.
   * @return points
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_POINTS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPoints() {
    return points;
  }


  @JsonProperty(value = JSON_PROPERTY_POINTS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPoints(@jakarta.annotation.Nonnull String points) {
    this.points = points;
  }

  public EncodedPolyline precision(@jakarta.annotation.Nonnull Integer precision) {
    
    this.precision = precision;
    return this;
  }

  /**
   * The precision of the returned polyline (7 for /v1, 6 for /v2) Be aware that with precision 7, coordinates with |longitude| &gt; 107.37 are undefined/will overflow. 
   * @return precision
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_PRECISION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPrecision() {
    return precision;
  }


  @JsonProperty(value = JSON_PROPERTY_PRECISION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrecision(@jakarta.annotation.Nonnull Integer precision) {
    this.precision = precision;
  }

  public EncodedPolyline length(@jakarta.annotation.Nonnull Integer length) {
    
    this.length = length;
    return this;
  }

  /**
   * The number of points in the string
   * minimum: 0
   * @return length
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_LENGTH, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLength() {
    return length;
  }


  @JsonProperty(value = JSON_PROPERTY_LENGTH, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLength(@jakarta.annotation.Nonnull Integer length) {
    this.length = length;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EncodedPolyline encodedPolyline = (EncodedPolyline) o;
    return Objects.equals(this.points, encodedPolyline.points) &&
        Objects.equals(this.precision, encodedPolyline.precision) &&
        Objects.equals(this.length, encodedPolyline.length);
  }

  @Override
  public int hashCode() {
    return Objects.hash(points, precision, length);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EncodedPolyline {\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

