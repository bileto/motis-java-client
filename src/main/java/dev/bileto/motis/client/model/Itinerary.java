/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.bileto.motis.client.model.FareTransfer;
import dev.bileto.motis.client.model.Leg;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Itinerary
 */
@JsonPropertyOrder({
  Itinerary.JSON_PROPERTY_DURATION,
  Itinerary.JSON_PROPERTY_START_TIME,
  Itinerary.JSON_PROPERTY_END_TIME,
  Itinerary.JSON_PROPERTY_TRANSFERS,
  Itinerary.JSON_PROPERTY_LEGS,
  Itinerary.JSON_PROPERTY_FARE_TRANSFERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Itinerary {
  public static final String JSON_PROPERTY_DURATION = "duration";
  @jakarta.annotation.Nonnull
  private Integer duration;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_TRANSFERS = "transfers";
  @jakarta.annotation.Nonnull
  private Integer transfers;

  public static final String JSON_PROPERTY_LEGS = "legs";
  @jakarta.annotation.Nonnull
  private List<Leg> legs = new ArrayList<>();

  public static final String JSON_PROPERTY_FARE_TRANSFERS = "fareTransfers";
  @jakarta.annotation.Nullable
  private List<FareTransfer> fareTransfers = new ArrayList<>();

  public Itinerary() {
  }

  public Itinerary duration(@jakarta.annotation.Nonnull Integer duration) {
    
    this.duration = duration;
    return this;
  }

  /**
   * journey duration in seconds
   * @return duration
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(@jakarta.annotation.Nonnull Integer duration) {
    this.duration = duration;
  }

  public Itinerary startTime(@jakarta.annotation.Nonnull OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

  /**
   * journey departure time
   * @return startTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartTime(@jakarta.annotation.Nonnull OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public Itinerary endTime(@jakarta.annotation.Nonnull OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

  /**
   * journey arrival time
   * @return endTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndTime(@jakarta.annotation.Nonnull OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public Itinerary transfers(@jakarta.annotation.Nonnull Integer transfers) {
    
    this.transfers = transfers;
    return this;
  }

  /**
   * The number of transfers this trip has.
   * @return transfers
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTransfers() {
    return transfers;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransfers(@jakarta.annotation.Nonnull Integer transfers) {
    this.transfers = transfers;
  }

  public Itinerary legs(@jakarta.annotation.Nonnull List<Leg> legs) {
    
    this.legs = legs;
    return this;
  }

  public Itinerary addLegsItem(Leg legsItem) {
    if (this.legs == null) {
      this.legs = new ArrayList<>();
    }
    this.legs.add(legsItem);
    return this;
  }

  /**
   * Journey legs
   * @return legs
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Leg> getLegs() {
    return legs;
  }


  @JsonProperty(JSON_PROPERTY_LEGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLegs(@jakarta.annotation.Nonnull List<Leg> legs) {
    this.legs = legs;
  }

  public Itinerary fareTransfers(@jakarta.annotation.Nullable List<FareTransfer> fareTransfers) {
    
    this.fareTransfers = fareTransfers;
    return this;
  }

  public Itinerary addFareTransfersItem(FareTransfer fareTransfersItem) {
    if (this.fareTransfers == null) {
      this.fareTransfers = new ArrayList<>();
    }
    this.fareTransfers.add(fareTransfersItem);
    return this;
  }

  /**
   * Fare information
   * @return fareTransfers
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FARE_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FareTransfer> getFareTransfers() {
    return fareTransfers;
  }


  @JsonProperty(JSON_PROPERTY_FARE_TRANSFERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFareTransfers(@jakarta.annotation.Nullable List<FareTransfer> fareTransfers) {
    this.fareTransfers = fareTransfers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Itinerary itinerary = (Itinerary) o;
    return Objects.equals(this.duration, itinerary.duration) &&
        Objects.equals(this.startTime, itinerary.startTime) &&
        Objects.equals(this.endTime, itinerary.endTime) &&
        Objects.equals(this.transfers, itinerary.transfers) &&
        Objects.equals(this.legs, itinerary.legs) &&
        Objects.equals(this.fareTransfers, itinerary.fareTransfers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, startTime, endTime, transfers, legs, fareTransfers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Itinerary {\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    transfers: ").append(toIndentedString(transfers)).append("\n");
    sb.append("    legs: ").append(toIndentedString(legs)).append("\n");
    sb.append("    fareTransfers: ").append(toIndentedString(fareTransfers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

