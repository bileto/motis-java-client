/*
 * MOTIS API
 * This is the MOTIS routing API.  Overview of MOTIS API versions:  MOTIS 0.x - deprecated/discontinued  MOTIS 2.x - current, providing:  * /api/v5/{plan,trip,stoptimes,map/trips} renamed METRO mode to SUBURBAN, AREAL_LIFT to AERIAL_LIFT; since MOTIS 2.5.0 * /api/v4/{plan,trip,stoptimes,map/trips} new displayName property, routeShortName only contains actual route short name from source; since MOTIS 2.2.0 * /api/v3/plan with correct maxTransfers API parameter (transfers actually corresponding to number of changes between transit legs (and not to number of transit legs), i.e. maxTransfers=0 returns direct public transit connections, as expected); since MOTIS 2.0.84  * /api/v2/{plan,trip} returns Google polylines with precision=6; since MOTIS 2.0.60 * /api/v1/{plan,trip} returns Google polylines with precision=7 (not defined for |longitude|>107) * /api/v1/_* all other endpoints  If you use the JS client lib https://www.npmjs.com/package/@motis-project/motis-client, endpoint versions will be taken into account automatically (i.e. the newest one available will be used). 
 *
 * The version of the OpenAPI document: v5
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RentalZoneRestrictions
 */
@JsonPropertyOrder({
  RentalZoneRestrictions.JSON_PROPERTY_VEHICLE_TYPE_IDXS,
  RentalZoneRestrictions.JSON_PROPERTY_RIDE_START_ALLOWED,
  RentalZoneRestrictions.JSON_PROPERTY_RIDE_END_ALLOWED,
  RentalZoneRestrictions.JSON_PROPERTY_RIDE_THROUGH_ALLOWED,
  RentalZoneRestrictions.JSON_PROPERTY_STATION_PARKING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class RentalZoneRestrictions {
  public static final String JSON_PROPERTY_VEHICLE_TYPE_IDXS = "vehicleTypeIdxs";
  @jakarta.annotation.Nonnull
  private List<Integer> vehicleTypeIdxs = new ArrayList<>();

  public static final String JSON_PROPERTY_RIDE_START_ALLOWED = "rideStartAllowed";
  @jakarta.annotation.Nonnull
  private Boolean rideStartAllowed;

  public static final String JSON_PROPERTY_RIDE_END_ALLOWED = "rideEndAllowed";
  @jakarta.annotation.Nonnull
  private Boolean rideEndAllowed;

  public static final String JSON_PROPERTY_RIDE_THROUGH_ALLOWED = "rideThroughAllowed";
  @jakarta.annotation.Nonnull
  private Boolean rideThroughAllowed;

  public static final String JSON_PROPERTY_STATION_PARKING = "stationParking";
  @jakarta.annotation.Nullable
  private Boolean stationParking;

  public RentalZoneRestrictions() {
  }

  public RentalZoneRestrictions vehicleTypeIdxs(@jakarta.annotation.Nonnull List<Integer> vehicleTypeIdxs) {
    
    this.vehicleTypeIdxs = vehicleTypeIdxs;
    return this;
  }

  public RentalZoneRestrictions addVehicleTypeIdxsItem(Integer vehicleTypeIdxsItem) {
    if (this.vehicleTypeIdxs == null) {
      this.vehicleTypeIdxs = new ArrayList<>();
    }
    this.vehicleTypeIdxs.add(vehicleTypeIdxsItem);
    return this;
  }

  /**
   * List of vehicle types (as indices into the provider&#39;s vehicle types array) to which these restrictions apply. If empty, the restrictions apply to all vehicle types of the provider. 
   * @return vehicleTypeIdxs
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_VEHICLE_TYPE_IDXS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getVehicleTypeIdxs() {
    return vehicleTypeIdxs;
  }


  @JsonProperty(value = JSON_PROPERTY_VEHICLE_TYPE_IDXS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVehicleTypeIdxs(@jakarta.annotation.Nonnull List<Integer> vehicleTypeIdxs) {
    this.vehicleTypeIdxs = vehicleTypeIdxs;
  }

  public RentalZoneRestrictions rideStartAllowed(@jakarta.annotation.Nonnull Boolean rideStartAllowed) {
    
    this.rideStartAllowed = rideStartAllowed;
    return this;
  }

  /**
   * whether the ride is allowed to start in this zone
   * @return rideStartAllowed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RIDE_START_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRideStartAllowed() {
    return rideStartAllowed;
  }


  @JsonProperty(value = JSON_PROPERTY_RIDE_START_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRideStartAllowed(@jakarta.annotation.Nonnull Boolean rideStartAllowed) {
    this.rideStartAllowed = rideStartAllowed;
  }

  public RentalZoneRestrictions rideEndAllowed(@jakarta.annotation.Nonnull Boolean rideEndAllowed) {
    
    this.rideEndAllowed = rideEndAllowed;
    return this;
  }

  /**
   * whether the ride is allowed to end in this zone
   * @return rideEndAllowed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RIDE_END_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRideEndAllowed() {
    return rideEndAllowed;
  }


  @JsonProperty(value = JSON_PROPERTY_RIDE_END_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRideEndAllowed(@jakarta.annotation.Nonnull Boolean rideEndAllowed) {
    this.rideEndAllowed = rideEndAllowed;
  }

  public RentalZoneRestrictions rideThroughAllowed(@jakarta.annotation.Nonnull Boolean rideThroughAllowed) {
    
    this.rideThroughAllowed = rideThroughAllowed;
    return this;
  }

  /**
   * whether the ride is allowed to pass through this zone
   * @return rideThroughAllowed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RIDE_THROUGH_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRideThroughAllowed() {
    return rideThroughAllowed;
  }


  @JsonProperty(value = JSON_PROPERTY_RIDE_THROUGH_ALLOWED, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRideThroughAllowed(@jakarta.annotation.Nonnull Boolean rideThroughAllowed) {
    this.rideThroughAllowed = rideThroughAllowed;
  }

  public RentalZoneRestrictions stationParking(@jakarta.annotation.Nullable Boolean stationParking) {
    
    this.stationParking = stationParking;
    return this;
  }

  /**
   * whether vehicles can only be parked at stations in this zone
   * @return stationParking
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_STATION_PARKING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStationParking() {
    return stationParking;
  }


  @JsonProperty(value = JSON_PROPERTY_STATION_PARKING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStationParking(@jakarta.annotation.Nullable Boolean stationParking) {
    this.stationParking = stationParking;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RentalZoneRestrictions rentalZoneRestrictions = (RentalZoneRestrictions) o;
    return Objects.equals(this.vehicleTypeIdxs, rentalZoneRestrictions.vehicleTypeIdxs) &&
        Objects.equals(this.rideStartAllowed, rentalZoneRestrictions.rideStartAllowed) &&
        Objects.equals(this.rideEndAllowed, rentalZoneRestrictions.rideEndAllowed) &&
        Objects.equals(this.rideThroughAllowed, rentalZoneRestrictions.rideThroughAllowed) &&
        Objects.equals(this.stationParking, rentalZoneRestrictions.stationParking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vehicleTypeIdxs, rideStartAllowed, rideEndAllowed, rideThroughAllowed, stationParking);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RentalZoneRestrictions {\n");
    sb.append("    vehicleTypeIdxs: ").append(toIndentedString(vehicleTypeIdxs)).append("\n");
    sb.append("    rideStartAllowed: ").append(toIndentedString(rideStartAllowed)).append("\n");
    sb.append("    rideEndAllowed: ").append(toIndentedString(rideEndAllowed)).append("\n");
    sb.append("    rideThroughAllowed: ").append(toIndentedString(rideThroughAllowed)).append("\n");
    sb.append("    stationParking: ").append(toIndentedString(stationParking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

