/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.bileto.motis.client.model.Place;
import com.bileto.motis.client.model.ReachablePlace;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Object containing all reachable places by One-to-All search
 */
@JsonPropertyOrder({
  Reachable.JSON_PROPERTY_ONE,
  Reachable.JSON_PROPERTY_ALL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Reachable {
  public static final String JSON_PROPERTY_ONE = "one";
  @jakarta.annotation.Nullable
  private Place one;

  public static final String JSON_PROPERTY_ALL = "all";
  @jakarta.annotation.Nullable
  private List<ReachablePlace> all = new ArrayList<>();

  public Reachable() {
  }

  public Reachable one(@jakarta.annotation.Nullable Place one) {
    
    this.one = one;
    return this;
  }

  /**
   * One location used in One-to-All search
   * @return one
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Place getOne() {
    return one;
  }


  @JsonProperty(JSON_PROPERTY_ONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOne(@jakarta.annotation.Nullable Place one) {
    this.one = one;
  }

  public Reachable all(@jakarta.annotation.Nullable List<ReachablePlace> all) {
    
    this.all = all;
    return this;
  }

  public Reachable addAllItem(ReachablePlace allItem) {
    if (this.all == null) {
      this.all = new ArrayList<>();
    }
    this.all.add(allItem);
    return this;
  }

  /**
   * List of locations reachable by One-to-All
   * @return all
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReachablePlace> getAll() {
    return all;
  }


  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAll(@jakarta.annotation.Nullable List<ReachablePlace> all) {
    this.all = all;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reachable reachable = (Reachable) o;
    return Objects.equals(this.one, reachable.one) &&
        Objects.equals(this.all, reachable.all);
  }

  @Override
  public int hashCode() {
    return Objects.hash(one, all);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reachable {\n");
    sb.append("    one: ").append(toIndentedString(one)).append("\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

