/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Administrative area
 */
@JsonPropertyOrder({
  Area.JSON_PROPERTY_NAME,
  Area.JSON_PROPERTY_ADMIN_LEVEL,
  Area.JSON_PROPERTY_MATCHED,
  Area.JSON_PROPERTY_UNIQUE,
  Area.JSON_PROPERTY_DEFAULT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Area {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_ADMIN_LEVEL = "adminLevel";
  @jakarta.annotation.Nonnull
  private BigDecimal adminLevel;

  public static final String JSON_PROPERTY_MATCHED = "matched";
  @jakarta.annotation.Nonnull
  private Boolean matched;

  public static final String JSON_PROPERTY_UNIQUE = "unique";
  @jakarta.annotation.Nullable
  private Boolean unique;

  public static final String JSON_PROPERTY_DEFAULT = "default";
  @jakarta.annotation.Nullable
  private Boolean _default;

  public Area() {
  }

  public Area name(@jakarta.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name of the area
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public Area adminLevel(@jakarta.annotation.Nonnull BigDecimal adminLevel) {
    
    this.adminLevel = adminLevel;
    return this;
  }

  /**
   * [OpenStreetMap &#x60;admin_level&#x60;](https://wiki.openstreetmap.org/wiki/Key:admin_level) of the area 
   * @return adminLevel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADMIN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAdminLevel() {
    return adminLevel;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdminLevel(@jakarta.annotation.Nonnull BigDecimal adminLevel) {
    this.adminLevel = adminLevel;
  }

  public Area matched(@jakarta.annotation.Nonnull Boolean matched) {
    
    this.matched = matched;
    return this;
  }

  /**
   * Whether this area was matched by the input text
   * @return matched
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MATCHED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMatched() {
    return matched;
  }


  @JsonProperty(JSON_PROPERTY_MATCHED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMatched(@jakarta.annotation.Nonnull Boolean matched) {
    this.matched = matched;
  }

  public Area unique(@jakarta.annotation.Nullable Boolean unique) {
    
    this.unique = unique;
    return this;
  }

  /**
   * Set for the first area after the &#x60;default&#x60; area that distinguishes areas if the match is ambiguous regarding (&#x60;default&#x60; area + place name / street [+ house number]). 
   * @return unique
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUnique() {
    return unique;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnique(@jakarta.annotation.Nullable Boolean unique) {
    this.unique = unique;
  }

  public Area _default(@jakarta.annotation.Nullable Boolean _default) {
    
    this._default = _default;
    return this;
  }

  /**
   * Whether this area should be displayed as default area (area with admin level closest 7)
   * @return _default
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefault() {
    return _default;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefault(@jakarta.annotation.Nullable Boolean _default) {
    this._default = _default;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Area area = (Area) o;
    return Objects.equals(this.name, area.name) &&
        Objects.equals(this.adminLevel, area.adminLevel) &&
        Objects.equals(this.matched, area.matched) &&
        Objects.equals(this.unique, area.unique) &&
        Objects.equals(this._default, area._default);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, adminLevel, matched, unique, _default);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Area {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    adminLevel: ").append(toIndentedString(adminLevel)).append("\n");
    sb.append("    matched: ").append(toIndentedString(matched)).append("\n");
    sb.append("    unique: ").append(toIndentedString(unique)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

