/*
 * MOTIS API
 * This is the MOTIS routing API.
 *
 * The version of the OpenAPI document: v4
 * Contact: felix@triptix.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bileto.motis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.bileto.motis.client.model.AlertCause;
import com.bileto.motis.client.model.AlertEffect;
import com.bileto.motis.client.model.AlertSeverityLevel;
import com.bileto.motis.client.model.TimeRange;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An alert, indicating some sort of incident in the public transit network.
 */
@JsonPropertyOrder({
  Alert.JSON_PROPERTY_COMMUNICATION_PERIOD,
  Alert.JSON_PROPERTY_IMPACT_PERIOD,
  Alert.JSON_PROPERTY_CAUSE,
  Alert.JSON_PROPERTY_CAUSE_DETAIL,
  Alert.JSON_PROPERTY_EFFECT,
  Alert.JSON_PROPERTY_EFFECT_DETAIL,
  Alert.JSON_PROPERTY_URL,
  Alert.JSON_PROPERTY_HEADER_TEXT,
  Alert.JSON_PROPERTY_DESCRIPTION_TEXT,
  Alert.JSON_PROPERTY_TTS_HEADER_TEXT,
  Alert.JSON_PROPERTY_TTS_DESCRIPTION_TEXT,
  Alert.JSON_PROPERTY_SEVERITY_LEVEL,
  Alert.JSON_PROPERTY_IMAGE_URL,
  Alert.JSON_PROPERTY_IMAGE_MEDIA_TYPE,
  Alert.JSON_PROPERTY_IMAGE_ALTERNATIVE_TEXT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Alert {
  public static final String JSON_PROPERTY_COMMUNICATION_PERIOD = "communicationPeriod";
  @jakarta.annotation.Nullable
  private List<TimeRange> communicationPeriod = new ArrayList<>();

  public static final String JSON_PROPERTY_IMPACT_PERIOD = "impactPeriod";
  @jakarta.annotation.Nullable
  private List<TimeRange> impactPeriod = new ArrayList<>();

  public static final String JSON_PROPERTY_CAUSE = "cause";
  @jakarta.annotation.Nullable
  private AlertCause cause;

  public static final String JSON_PROPERTY_CAUSE_DETAIL = "causeDetail";
  @jakarta.annotation.Nullable
  private String causeDetail;

  public static final String JSON_PROPERTY_EFFECT = "effect";
  @jakarta.annotation.Nullable
  private AlertEffect effect;

  public static final String JSON_PROPERTY_EFFECT_DETAIL = "effectDetail";
  @jakarta.annotation.Nullable
  private String effectDetail;

  public static final String JSON_PROPERTY_URL = "url";
  @jakarta.annotation.Nullable
  private String url;

  public static final String JSON_PROPERTY_HEADER_TEXT = "headerText";
  @jakarta.annotation.Nonnull
  private String headerText;

  public static final String JSON_PROPERTY_DESCRIPTION_TEXT = "descriptionText";
  @jakarta.annotation.Nonnull
  private String descriptionText;

  public static final String JSON_PROPERTY_TTS_HEADER_TEXT = "ttsHeaderText";
  @jakarta.annotation.Nullable
  private String ttsHeaderText;

  public static final String JSON_PROPERTY_TTS_DESCRIPTION_TEXT = "ttsDescriptionText";
  @jakarta.annotation.Nullable
  private String ttsDescriptionText;

  public static final String JSON_PROPERTY_SEVERITY_LEVEL = "severityLevel";
  @jakarta.annotation.Nullable
  private AlertSeverityLevel severityLevel;

  public static final String JSON_PROPERTY_IMAGE_URL = "imageUrl";
  @jakarta.annotation.Nullable
  private String imageUrl;

  public static final String JSON_PROPERTY_IMAGE_MEDIA_TYPE = "imageMediaType";
  @jakarta.annotation.Nullable
  private String imageMediaType;

  public static final String JSON_PROPERTY_IMAGE_ALTERNATIVE_TEXT = "imageAlternativeText";
  @jakarta.annotation.Nullable
  private String imageAlternativeText;

  public Alert() {
  }

  public Alert communicationPeriod(@jakarta.annotation.Nullable List<TimeRange> communicationPeriod) {
    
    this.communicationPeriod = communicationPeriod;
    return this;
  }

  public Alert addCommunicationPeriodItem(TimeRange communicationPeriodItem) {
    if (this.communicationPeriod == null) {
      this.communicationPeriod = new ArrayList<>();
    }
    this.communicationPeriod.add(communicationPeriodItem);
    return this;
  }

  /**
   * Time when the alert should be shown to the user. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. 
   * @return communicationPeriod
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMUNICATION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TimeRange> getCommunicationPeriod() {
    return communicationPeriod;
  }


  @JsonProperty(JSON_PROPERTY_COMMUNICATION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommunicationPeriod(@jakarta.annotation.Nullable List<TimeRange> communicationPeriod) {
    this.communicationPeriod = communicationPeriod;
  }

  public Alert impactPeriod(@jakarta.annotation.Nullable List<TimeRange> impactPeriod) {
    
    this.impactPeriod = impactPeriod;
    return this;
  }

  public Alert addImpactPeriodItem(TimeRange impactPeriodItem) {
    if (this.impactPeriod == null) {
      this.impactPeriod = new ArrayList<>();
    }
    this.impactPeriod.add(impactPeriodItem);
    return this;
  }

  /**
   * Time when the services are affected by the disruption mentioned in the alert.
   * @return impactPeriod
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPACT_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TimeRange> getImpactPeriod() {
    return impactPeriod;
  }


  @JsonProperty(JSON_PROPERTY_IMPACT_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpactPeriod(@jakarta.annotation.Nullable List<TimeRange> impactPeriod) {
    this.impactPeriod = impactPeriod;
  }

  public Alert cause(@jakarta.annotation.Nullable AlertCause cause) {
    
    this.cause = cause;
    return this;
  }

  /**
   * Get cause
   * @return cause
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlertCause getCause() {
    return cause;
  }


  @JsonProperty(JSON_PROPERTY_CAUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCause(@jakarta.annotation.Nullable AlertCause cause) {
    this.cause = cause;
  }

  public Alert causeDetail(@jakarta.annotation.Nullable String causeDetail) {
    
    this.causeDetail = causeDetail;
    return this;
  }

  /**
   * Description of the cause of the alert that allows for agency-specific language; more specific than the Cause. 
   * @return causeDetail
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAUSE_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCauseDetail() {
    return causeDetail;
  }


  @JsonProperty(JSON_PROPERTY_CAUSE_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCauseDetail(@jakarta.annotation.Nullable String causeDetail) {
    this.causeDetail = causeDetail;
  }

  public Alert effect(@jakarta.annotation.Nullable AlertEffect effect) {
    
    this.effect = effect;
    return this;
  }

  /**
   * Get effect
   * @return effect
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EFFECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlertEffect getEffect() {
    return effect;
  }


  @JsonProperty(JSON_PROPERTY_EFFECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffect(@jakarta.annotation.Nullable AlertEffect effect) {
    this.effect = effect;
  }

  public Alert effectDetail(@jakarta.annotation.Nullable String effectDetail) {
    
    this.effectDetail = effectDetail;
    return this;
  }

  /**
   * Description of the effect of the alert that allows for agency-specific language; more specific than the Effect. 
   * @return effectDetail
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EFFECT_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEffectDetail() {
    return effectDetail;
  }


  @JsonProperty(JSON_PROPERTY_EFFECT_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffectDetail(@jakarta.annotation.Nullable String effectDetail) {
    this.effectDetail = effectDetail;
  }

  public Alert url(@jakarta.annotation.Nullable String url) {
    
    this.url = url;
    return this;
  }

  /**
   * The URL which provides additional information about the alert.
   * @return url
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@jakarta.annotation.Nullable String url) {
    this.url = url;
  }

  public Alert headerText(@jakarta.annotation.Nonnull String headerText) {
    
    this.headerText = headerText;
    return this;
  }

  /**
   * Header for the alert. This plain-text string will be highlighted, for example in boldface. 
   * @return headerText
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEADER_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHeaderText() {
    return headerText;
  }


  @JsonProperty(JSON_PROPERTY_HEADER_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeaderText(@jakarta.annotation.Nonnull String headerText) {
    this.headerText = headerText;
  }

  public Alert descriptionText(@jakarta.annotation.Nonnull String descriptionText) {
    
    this.descriptionText = descriptionText;
    return this;
  }

  /**
   * Description for the alert. This plain-text string will be formatted as the body of the alert (or shown on an explicit \&quot;expand\&quot; request by the user). The information in the description should add to the information of the header. 
   * @return descriptionText
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescriptionText() {
    return descriptionText;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescriptionText(@jakarta.annotation.Nonnull String descriptionText) {
    this.descriptionText = descriptionText;
  }

  public Alert ttsHeaderText(@jakarta.annotation.Nullable String ttsHeaderText) {
    
    this.ttsHeaderText = ttsHeaderText;
    return this;
  }

  /**
   * Text containing the alert&#39;s header to be used for text-to-speech implementations. This field is the text-to-speech version of header_text. It should contain the same information as headerText but formatted such that it can read as text-to-speech (for example, abbreviations removed, numbers spelled out, etc.) 
   * @return ttsHeaderText
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TTS_HEADER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTtsHeaderText() {
    return ttsHeaderText;
  }


  @JsonProperty(JSON_PROPERTY_TTS_HEADER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTtsHeaderText(@jakarta.annotation.Nullable String ttsHeaderText) {
    this.ttsHeaderText = ttsHeaderText;
  }

  public Alert ttsDescriptionText(@jakarta.annotation.Nullable String ttsDescriptionText) {
    
    this.ttsDescriptionText = ttsDescriptionText;
    return this;
  }

  /**
   * Text containing a description for the alert to be used for text-to-speech implementations. This field is the text-to-speech version of description_text. It should contain the same information as description_text but formatted such that it can be read as text-to-speech (for example, abbreviations removed, numbers spelled out, etc.) 
   * @return ttsDescriptionText
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TTS_DESCRIPTION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTtsDescriptionText() {
    return ttsDescriptionText;
  }


  @JsonProperty(JSON_PROPERTY_TTS_DESCRIPTION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTtsDescriptionText(@jakarta.annotation.Nullable String ttsDescriptionText) {
    this.ttsDescriptionText = ttsDescriptionText;
  }

  public Alert severityLevel(@jakarta.annotation.Nullable AlertSeverityLevel severityLevel) {
    
    this.severityLevel = severityLevel;
    return this;
  }

  /**
   * Severity of the alert.
   * @return severityLevel
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEVERITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlertSeverityLevel getSeverityLevel() {
    return severityLevel;
  }


  @JsonProperty(JSON_PROPERTY_SEVERITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeverityLevel(@jakarta.annotation.Nullable AlertSeverityLevel severityLevel) {
    this.severityLevel = severityLevel;
  }

  public Alert imageUrl(@jakarta.annotation.Nullable String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * String containing an URL linking to an image.
   * @return imageUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageUrl() {
    return imageUrl;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageUrl(@jakarta.annotation.Nullable String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public Alert imageMediaType(@jakarta.annotation.Nullable String imageMediaType) {
    
    this.imageMediaType = imageMediaType;
    return this;
  }

  /**
   * IANA media type as to specify the type of image to be displayed. The type must start with \&quot;image/\&quot; 
   * @return imageMediaType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageMediaType() {
    return imageMediaType;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageMediaType(@jakarta.annotation.Nullable String imageMediaType) {
    this.imageMediaType = imageMediaType;
  }

  public Alert imageAlternativeText(@jakarta.annotation.Nullable String imageAlternativeText) {
    
    this.imageAlternativeText = imageAlternativeText;
    return this;
  }

  /**
   * Text describing the appearance of the linked image in the image field (e.g., in case the image can&#39;t be displayed or the user can&#39;t see the image for accessibility reasons). See the HTML spec for alt image text. 
   * @return imageAlternativeText
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_ALTERNATIVE_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageAlternativeText() {
    return imageAlternativeText;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_ALTERNATIVE_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageAlternativeText(@jakarta.annotation.Nullable String imageAlternativeText) {
    this.imageAlternativeText = imageAlternativeText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Alert alert = (Alert) o;
    return Objects.equals(this.communicationPeriod, alert.communicationPeriod) &&
        Objects.equals(this.impactPeriod, alert.impactPeriod) &&
        Objects.equals(this.cause, alert.cause) &&
        Objects.equals(this.causeDetail, alert.causeDetail) &&
        Objects.equals(this.effect, alert.effect) &&
        Objects.equals(this.effectDetail, alert.effectDetail) &&
        Objects.equals(this.url, alert.url) &&
        Objects.equals(this.headerText, alert.headerText) &&
        Objects.equals(this.descriptionText, alert.descriptionText) &&
        Objects.equals(this.ttsHeaderText, alert.ttsHeaderText) &&
        Objects.equals(this.ttsDescriptionText, alert.ttsDescriptionText) &&
        Objects.equals(this.severityLevel, alert.severityLevel) &&
        Objects.equals(this.imageUrl, alert.imageUrl) &&
        Objects.equals(this.imageMediaType, alert.imageMediaType) &&
        Objects.equals(this.imageAlternativeText, alert.imageAlternativeText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(communicationPeriod, impactPeriod, cause, causeDetail, effect, effectDetail, url, headerText, descriptionText, ttsHeaderText, ttsDescriptionText, severityLevel, imageUrl, imageMediaType, imageAlternativeText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Alert {\n");
    sb.append("    communicationPeriod: ").append(toIndentedString(communicationPeriod)).append("\n");
    sb.append("    impactPeriod: ").append(toIndentedString(impactPeriod)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    causeDetail: ").append(toIndentedString(causeDetail)).append("\n");
    sb.append("    effect: ").append(toIndentedString(effect)).append("\n");
    sb.append("    effectDetail: ").append(toIndentedString(effectDetail)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    headerText: ").append(toIndentedString(headerText)).append("\n");
    sb.append("    descriptionText: ").append(toIndentedString(descriptionText)).append("\n");
    sb.append("    ttsHeaderText: ").append(toIndentedString(ttsHeaderText)).append("\n");
    sb.append("    ttsDescriptionText: ").append(toIndentedString(ttsDescriptionText)).append("\n");
    sb.append("    severityLevel: ").append(toIndentedString(severityLevel)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    imageMediaType: ").append(toIndentedString(imageMediaType)).append("\n");
    sb.append("    imageAlternativeText: ").append(toIndentedString(imageAlternativeText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

